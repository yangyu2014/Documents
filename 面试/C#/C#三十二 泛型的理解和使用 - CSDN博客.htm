<!DOCTYPE html>
<!-- saved from url=(0058)http://blog.csdn.net/zhangchen124/article/details/51378631 -->
<html><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><script type="text/javascript" async="" src="./C#三十二 泛型的理解和使用 - CSDN博客_files/pr.js"></script><script type="text/javascript" async="" src="./C#三十二 泛型的理解和使用 - CSDN博客_files/lpjnmjnpdmhhmyojn.js"></script>
            <link rel="canonical" href="http://blog.csdn.net/zhangchen124/article/details/51378631"> 

    <script src="./C#三十二 泛型的理解和使用 - CSDN博客_files/hm.js"></script><script type="text/javascript">
        var username = "zhangchen124";var _blogger = username;var blog_address = "http://blog.csdn.net/zhangchen124";var static_host = "http://static.blog.csdn.net";
        var currentUserName = ""; var fileName = '51378631';var commentscount = 0; var islock = false
        window.quickReplyflag = true;
        var totalFloor=0;
                
                 var isBole = false;
                
                
                 var isDigg = false;
                
            
             var isExpert=true;
            
    </script>


    <meta http-equiv="X-UA-Compatible" content="IE=Edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, user-scalable=no">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <script src="./C#三十二 泛型的理解和使用 - CSDN博客_files/jquery-1.9.1.min.js" type="text/javascript"></script>
    <link rel="stylesheet" href="./C#三十二 泛型的理解和使用 - CSDN博客_files/bootstrap.min.css">
    <link rel="stylesheet" href="./C#三十二 泛型的理解和使用 - CSDN博客_files/avatar.css">
    <link type="text/css" rel="stylesheet" href="./C#三十二 泛型的理解和使用 - CSDN博客_files/default.css">
    <link rel="stylesheet" href="./C#三十二 泛型的理解和使用 - CSDN博客_files/style.css">
    <link rel="stylesheet" href="./C#三十二 泛型的理解和使用 - CSDN博客_files/content_toolbar.css">

    <script type="text/javascript" src="./C#三十二 泛型的理解和使用 - CSDN博客_files/iconfont.js"></script>
    <script src="./C#三十二 泛型的理解和使用 - CSDN博客_files/main.js"></script>
    <script type="text/javascript" src="./C#三十二 泛型的理解和使用 - CSDN博客_files/tracking_for_recommend.js" charset="utf-8"></script>
    <script type="text/javascript" src="./C#三十二 泛型的理解和使用 - CSDN博客_files/tracking.js" charset="utf-8"></script>
    <script type="text/javascript" src="./C#三十二 泛型的理解和使用 - CSDN博客_files/cnick.js" charset="utf-8"></script>
 
    <link rel="stylesheet" href="./C#三十二 泛型的理解和使用 - CSDN博客_files/prettify.css">
    <script type="text/javascript" src="./C#三十二 泛型的理解和使用 - CSDN博客_files/prettify.js"></script>
<script src="./C#三十二 泛型的理解和使用 - CSDN博客_files/ds.js"></script>
    <script type="text/javascript">

        // Traffic Stats of the entire Web site By baidu
        var _hmt = _hmt || [];
        (function() {
            var hm = document.createElement("script");
            hm.src = "https://hm.baidu.com/hm.js?6bcd52f51e9b3dce32bec4a3997715ac";
            var s = document.getElementsByTagName("script")[0];
            s.parentNode.insertBefore(hm, s);
        })();
        // Traffic Stats of the entire Web site By baidu end



    </script>
    <meta name="description" content="日常生活中的事物都是有类型的，比如我们说“一个女人”，那么“女”就是这个人的类型。我们可以说“女人都是水做的”，那么听者都知道这是在说“女”这种类型的人。再比如你去肉店买肉，你可以对老板说“我要十斤猪肉”，那么老板一定知道你是在要“猪”这种类型的肉。日常生活中的这些语言都是带有类型的，但是在日常生活中还有一些语言是不带类型的。比如我们经常说“人是贪婪的”，这里的人就没有类型之分，听者都知道是指所有">
    <meta name="keywords" content="泛型,c#">
    <meta http-equiv="Cache-Control" content="no-siteapp"><link rel="alternate" media="handheld" href="http://blog.csdn.net/zhangchen124/article/details/51378631#">
    <meta name="shenma-site-verification" content="5a59773ab8077d4a62bf469ab966a63b_1497598848">


    <title>C#三十二 泛型的理解和使用 - CSDN博客</title>
<script src="./C#三十二 泛型的理解和使用 - CSDN博客_files/wxLogin.js"></script><script src="./C#三十二 泛型的理解和使用 - CSDN博客_files/share.js"></script><link type="text/css" rel="stylesheet" href="./C#三十二 泛型的理解和使用 - CSDN博客_files/style(1).css"><link rel="stylesheet" type="text/css" href="./C#三十二 泛型的理解和使用 - CSDN博客_files/style(2).css"><link rel="stylesheet" href="./C#三十二 泛型的理解和使用 - CSDN博客_files/share_style0_16.css"><style type="text/css">.MathJax_Hover_Frame {border-radius: .25em; -webkit-border-radius: .25em; -moz-border-radius: .25em; -khtml-border-radius: .25em; box-shadow: 0px 0px 15px #83A; -webkit-box-shadow: 0px 0px 15px #83A; -moz-box-shadow: 0px 0px 15px #83A; -khtml-box-shadow: 0px 0px 15px #83A; border: 1px solid #A6D ! important; display: inline-block; position: absolute}
.MathJax_Hover_Arrow {position: absolute; width: 15px; height: 11px; cursor: pointer}
</style><style type="text/css">#MathJax_About {position: fixed; left: 50%; width: auto; text-align: center; border: 3px outset; padding: 1em 2em; background-color: #DDDDDD; color: black; cursor: default; font-family: message-box; font-size: 120%; font-style: normal; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; z-index: 201; border-radius: 15px; -webkit-border-radius: 15px; -moz-border-radius: 15px; -khtml-border-radius: 15px; box-shadow: 0px 10px 20px #808080; -webkit-box-shadow: 0px 10px 20px #808080; -moz-box-shadow: 0px 10px 20px #808080; -khtml-box-shadow: 0px 10px 20px #808080; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')}
.MathJax_Menu {position: absolute; background-color: white; color: black; width: auto; padding: 5px 0px; border: 1px solid #CCCCCC; margin: 0; cursor: default; font: menu; text-align: left; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; z-index: 201; border-radius: 5px; -webkit-border-radius: 5px; -moz-border-radius: 5px; -khtml-border-radius: 5px; box-shadow: 0px 10px 20px #808080; -webkit-box-shadow: 0px 10px 20px #808080; -moz-box-shadow: 0px 10px 20px #808080; -khtml-box-shadow: 0px 10px 20px #808080; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')}
.MathJax_MenuItem {padding: 1px 2em; background: transparent}
.MathJax_MenuArrow {position: absolute; right: .5em; color: #666666}
.MathJax_MenuActive .MathJax_MenuArrow {color: white}
.MathJax_MenuArrow.RTL {left: .5em; right: auto}
.MathJax_MenuCheck {position: absolute; left: .7em}
.MathJax_MenuCheck.RTL {right: .7em; left: auto}
.MathJax_MenuRadioCheck {position: absolute; left: .7em}
.MathJax_MenuRadioCheck.RTL {right: .7em; left: auto}
.MathJax_MenuLabel {padding: 1px 2em 3px 1.33em; font-style: italic}
.MathJax_MenuRule {border-top: 1px solid #DDDDDD; margin: 4px 3px}
.MathJax_MenuDisabled {color: GrayText}
.MathJax_MenuActive {background-color: #606872; color: white}
.MathJax_Menu_Close {position: absolute; width: 31px; height: 31px; top: -15px; left: -15px}
</style><style type="text/css">#MathJax_Zoom {position: absolute; background-color: #F0F0F0; overflow: auto; display: block; z-index: 301; padding: .5em; border: 1px solid black; margin: 0; font-weight: normal; font-style: normal; text-align: left; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; box-shadow: 5px 5px 15px #AAAAAA; -webkit-box-shadow: 5px 5px 15px #AAAAAA; -moz-box-shadow: 5px 5px 15px #AAAAAA; -khtml-box-shadow: 5px 5px 15px #AAAAAA; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')}
#MathJax_ZoomOverlay {position: absolute; left: 0; top: 0; z-index: 300; display: inline-block; width: 100%; height: 100%; border: 0; padding: 0; margin: 0; background-color: white; opacity: 0; filter: alpha(opacity=0)}
#MathJax_ZoomFrame {position: relative; display: inline-block; height: 0; width: 0}
#MathJax_ZoomEventTrap {position: absolute; left: 0; top: 0; z-index: 302; display: inline-block; border: 0; padding: 0; margin: 0; background-color: white; opacity: 0; filter: alpha(opacity=0)}
</style><style type="text/css">.MathJax_Preview {color: #888}
#MathJax_Message {position: fixed; left: 1em; bottom: 1.5em; background-color: #E6E6E6; border: 1px solid #959595; margin: 0px; padding: 2px 8px; z-index: 102; color: black; font-size: 80%; width: auto; white-space: nowrap}
#MathJax_MSIE_Frame {position: absolute; top: 0; left: 0; width: 0px; z-index: 101; border: 0px; margin: 0px; padding: 0px}
.MathJax_Error {color: #CC0000; font-style: italic}
</style></head>
<body><div id="BAIDU_DUP_fp_wrapper" style="position: absolute; left: -1px; bottom: -1px; z-index: 0; width: 0px; height: 0px; overflow: hidden; visibility: hidden; display: none;"><iframe id="BAIDU_DUP_fp_iframe" src="./C#三十二 泛型的理解和使用 - CSDN博客_files/o.html" style="width: 0px; height: 0px; visibility: hidden; display: none;"></iframe></div><div id="MathJax_Message" style="display: none;"></div><svg aria-hidden="true" style="position: absolute; width: 0px; height: 0px; overflow: hidden;"><symbol id="icon-xiajiantou" viewBox="0 0 1024 1024"><path d="M328.208 346.062h368.494c20.393 0 36.887 16.366 36.887 36.757 0 9.484-3.637 18.056-9.483 24.55L541.873 650.522c-12.211 16.105-35.2 19.484-51.438 7.275-2.859-2.08-5.324-4.547-7.274-7.275L298.853 404.772c-12.08-16.106-8.83-39.225 7.404-51.306 6.626-5.066 14.289-7.404 21.95-7.404z"></path></symbol><symbol id="icon-shouji" viewBox="0 0 1024 1024"><path d="M537.754 795.889c-26.41 0-47.893 21.478-47.893 47.892s21.484 47.893 47.893 47.893 47.892-21.479 47.892-47.893-21.483-47.892-47.892-47.892z"></path><path d="M774.697 42.071H300.815c-39.864 0-72.3 32.43-72.3 72.3v795.264c0 39.869 32.43 72.3 72.3 72.3h473.872c39.87 0 72.3-32.431 72.3-72.3v-795.27c0.004-39.864-32.426-72.294-72.29-72.294zM300.815 90.266h473.872a24.125 24.125 0 0 1 24.1 24.1v595.809H276.72v-595.81a24.125 24.125 0 0 1 24.094-24.1z m473.882 843.463H300.815a24.125 24.125 0 0 1-24.1-24.1V762.501h522.072V909.63a24.115 24.115 0 0 1-24.09 24.1z"></path></symbol><symbol id="icon-tianxie" viewBox="0 0 1024 1024"><path d="M121.905 780.19h780.19v97.524h-780.19V780.19zM823.296 298.496l-68.974-68.974-344.795 344.796-34.475 103.448 103.424-34.475zM875.008 246.76l17.237-17.238-68.949-68.949-17.262 17.237-17.237 17.238 68.974 68.973z"></path></symbol><symbol id="icon-sousuo" viewBox="0 0 1024 1024"><path d="M1023.972002 964.002812l-59.981188 59.981189-271.443276-271.459276c-166.600191 136.489602-412.812649 126.986048-568.309361-28.494664-165.624236-165.624236-165.624236-434.187647 0-599.859881 165.624236-165.592238 434.187647-165.592238 599.827883 0 155.52871 155.52871 164.984266 401.789166 28.462666 568.389356L1023.972002 964.002812zM663.364906 184.007375c-132.585785-132.585785-347.327719-132.761777-479.705514-0.43198-132.329797 132.345796-132.121807 347.119729 0.463978 479.705514s347.375717 132.793775 479.705514 0.41598c132.329797-132.281799 132.169805-347.10373-0.463978-479.689514z"></path></symbol><symbol id="icon-guanbi" viewBox="0 0 1024 1024"><path d="M1002.211316 933.90818c24.46369 24.46369 29.007633 59.583246 10.159871 78.447007-18.863761 18.863761-53.983317 14.303819-78.447007-10.159871L21.807724 90.09486C-2.655966 65.631169-7.199909 30.495614 11.647853 11.647853c18.863761-18.863761 53.983317-14.303819 78.447007 10.159871L1002.211316 933.90818z"></path><path d="M933.92418 21.807724C958.38787-2.655966 993.507426-7.199909 1012.371187 11.647853c18.863761 18.863761 14.303819 53.983317-10.159871 78.447007L90.09486 1002.211316c-24.46369 24.46369-59.583246 29.007633-78.447007 10.159871-18.847761-18.863761-14.303819-53.983317 10.159871-78.463007L933.92418 21.807724z"></path></symbol><symbol id="icon-caidan" viewBox="0 0 1024 1024"><path d="M0 132.8a48.496 48.496 0 0 0 48.496 48.496h927.008a48.496 48.496 0 1 0 0-96.992H48.496A48.496 48.496 0 0 0 0 132.8s0-26.784 0 0zM0 512.016a48.48 48.48 0 0 0 48.48 48.48h927.04a48.48 48.48 0 0 0 0-96.96H48.48A48.48 48.48 0 0 0 0 512.016s0-26.784 0 0zM0 891.2a48.496 48.496 0 0 0 48.496 48.496h927.008a48.496 48.496 0 1 0 0-96.992H48.496A48.496 48.496 0 0 0 0 891.2s0-26.784 0 0z"></path></symbol><symbol id="icon-yonghudenglu" viewBox="0 0 1024 1024"><path d="M1022.26704 962.432c-43.888-157.584-162.16-281.216-312.064-340.144 92.8-61.376 153.92-164.496 153.92-281.168C864.12304 153.04 706.04304 0 511.70704 0 317.35504 0 159.19504 153.04 159.19504 341.136c0 116.704 61.152 219.84 154.064 281.184C164.13904 681.024 46.18704 803.792 1.80304 960.16c-7.344 26.016 8.464 52.864 35.36 60.032a52.016 52.016 0 0 0 38.4-4.608 49.072 49.072 0 0 0 23.712-29.568c50.768-178.96 220.352-303.92 412.448-303.92 193.04 0 362.848 125.712 412.944 305.744 7.296 26.048 34.992 41.456 61.952 34.48 26.912-7.04 42.88-33.824 35.648-59.888zM260.25104 341.136c0-134.256 112.816-243.424 251.472-243.424 138.576 0 251.328 109.184 251.328 243.424 0 133.904-112.768 242.864-251.328 242.864-138.672 0-251.472-108.976-251.472-242.864z m0 0"></path></symbol><symbol id="toolbar-csdnlogo" viewBox="0 0 1024 1024"><path d="M533.941333 419.264c14.709333-1.621333 37.290667-3.264 68.352-3.264 51.872 0 93.802667 9.152 119.776 28.416 23.338667 17.952 38.858667 47.008 34.56 89.130667-3.978667 39.189333-24.042667 66.634667-53.312 83.594666C676.544 633.152 642.837333 640 592.106667 640c-29.888 0-58.421333-1.642667-80.106667-4.896l21.941333-215.84z m42.869334 172.938667c4.981333 0.992 11.562667 1.973333 24.533333 1.973333 51.882667 0 88.469333-25.877333 92.16-62.24 5.333333-52.554667-27.125333-70.944-81.802667-70.624-7.072 0-16.917333 0-22.133333 0.970667L576.8 592.213333h0.010667z m223.498666-164.704c210.954667-39.872 229.162667 31.776 222.645334 95.189333L1010.656 640h-66.944l11.210667-106.986667c2.421333-23.562667 17.504-69.653333-55.338667-67.914666-25.184 0.608-37.706667 4.064-37.706667 4.064s-2.186667 28.469333-4.832 49.514666L844.32 640H778.666667l13.024-119.573333" fill="#231916"></path><path d="M226.634667 632.682667c-12.373333 4.341333-38.037333 7.317333-73.909334 7.317333C49.6 640-6.048 590.933333 0.522667 526.090667 8.416 448.810667 90.858667 405.333333 181.141333 405.333333c34.976 0 55.552 2.858667 74.858667 7.637334l-6.208 52.064c-12.821333-4.384-42.890667-8.405333-67.232-8.405334-53.141333 0-98.250667 16.042667-103.424 66.762667-4.608 45.354667 27.061333 67.04 86.816 67.04 20.8 0 51.477333-3.018667 65.653333-7.370667l-4.992 49.6 0.021334 0.021334z" fill="#C92027"></path><path d="M272.714667 580.021333c19.285333 6.762667 59.488 13.504 92 13.504 35.029333 0 54.528-9.333333 56.096-23.797333 1.418667-13.205333-12.928-14.986667-52.490667-24.010667-54.666667-12.896-89.546667-32.842667-86.133333-64.704C286.176 443.989333 337.685333 416 416.725333 416c38.56 0 75.914667 2.613333 95.274667 8.714667l-6.656 46.666666c-12.565333-4.202667-60.672-10.037333-93.205333-10.037333-32.992 0-50.069333 9.973333-51.253334 20.917333-1.493333 13.845333 15.658667 14.485333 58.528 25.450667 58.026667 14.154667 83.402667 34.090667 80.085334 64.992C495.605333 609.109333 449.258667 640 356.714667 640c-38.528 0-71.744-6.762667-90.048-13.525333l6.048-46.453334z" fill="#231916"></path></symbol></svg><svg aria-hidden="true" style="position: absolute; width: 0px; height: 0px; overflow: hidden;"><symbol id="icon-read" viewBox="0 0 1024 1024"><path d="M988.16 240.64c0-5.12-2.56-11.52-6.4-15.36-2.56-2.56-51.2-55.04-135.68-81.92-32-10.24-64-15.36-96-15.36-97.28 0-181.76 46.08-235.52 84.48-55.04-39.68-139.52-85.76-236.8-85.76-32 0-65.28 5.12-96 15.36-84.48 26.88-131.84 81.92-134.4 84.48-3.84 3.84-5.12 8.96-5.12 15.36l0 546.56 60.16 71.68c3.84 8.96 12.8 15.36 21.76 15.36 3.84 0 7.68 0 10.24-2.56 19.2-5.12 120.32-29.44 199.68-29.44 37.12 0 64 5.12 79.36 15.36 7.68 5.12 11.52 10.24 12.8 16.64 0 12.8 10.24 23.04 23.04 23.04 1.28 0 8.96 0 21.76 0 24.32 0 61.44 0 98.56-2.56l0 0c1.28 0 3.84 0 5.12 0 10.24 0 20.48-7.68 23.04-17.92 2.56-10.24 7.68-16.64 17.92-23.04 16.64-8.96 42.24-14.08 76.8-14.08 78.08 0 171.52 24.32 198.4 32 3.84 1.28 7.68 2.56 11.52 2.56 0 0 0 0 0 0 8.96 0 17.92-5.12 21.76-14.08l64-72.96L988.16 241.92 988.16 240.64zM88.32 744.96 88.32 250.88c14.08-14.08 52.48-46.08 107.52-64 26.88-8.96 53.76-12.8 81.92-12.8 70.4 0 142.08 26.88 213.76 79.36l0 477.44c-38.4-23.04-88.32-34.56-149.76-34.56-32 0-66.56 3.84-102.4 10.24C179.2 715.52 124.16 733.44 88.32 744.96zM893.44 824.32c-20.48-5.12-61.44-15.36-106.24-23.04-35.84-5.12-66.56-7.68-94.72-7.68-43.52 0-76.8 6.4-101.12 20.48-15.36 8.96-26.88 20.48-33.28 34.56-33.28 1.28-65.28 2.56-87.04 2.56-1.28 0-2.56 0-3.84 0-6.4-12.8-15.36-24.32-29.44-32-23.04-15.36-58.88-21.76-106.24-21.76-76.8 0-165.12 19.2-200.96 28.16l-29.44-35.84c51.2-17.92 148.48-47.36 240.64-47.36 70.4 0 122.88 17.92 153.6 52.48l0 0c2.56 2.56 2.56 2.56 2.56 2.56l1.28 1.28c0 0 1.28 1.28 1.28 1.28 0 0 1.28 1.28 1.28 1.28l1.28 0c0 0 2.56 1.28 2.56 1.28l1.28 0c0 0 1.28 0 1.28 0 0 0 1.28 0 1.28 0l2.56 0c0 0 1.28 0 1.28 0 0 0 2.56 0 2.56 0 0 0 1.28 0 1.28 0 0 0 2.56-1.28 2.56-1.28 0 0 1.28 0 1.28 0 0 0 1.28 0 1.28-1.28 0 0 1.28 0 1.28 0 0 0 1.28 0 1.28-1.28 0 0 1.28 0 1.28 0l2.56-2.56 0 0c30.72-37.12 81.92-56.32 152.32-56.32 39.68 0 122.88 6.4 240.64 49.92L893.44 824.32zM940.8 744.96c-35.84-14.08-90.88-32-152.32-43.52-37.12-6.4-71.68-10.24-103.68-10.24-60.16 0-110.08 12.8-148.48 37.12L536.32 253.44c70.4-51.2 142.08-78.08 212.48-78.08 28.16 0 55.04 3.84 81.92 12.8 56.32 17.92 94.72 49.92 110.08 64L940.8 744.96z"></path></symbol><symbol id="icon-fanhuidingbu" viewBox="0 0 1024 1024"><path d="M769.935431 593.915815h204.109522a34.314671 34.314671 0 0 0 24.271353-58.690641l-432.071925-432.071925H962.22313A51.576624 51.576624 0 1 0 962.22313 0H62.509195a51.576624 51.576624 0 0 0 0 103.153249h394.827953l-432.071925 432.071925a34.314671 34.314671 0 0 0 24.271352 58.690641h204.21414v395.664896a34.419289 34.419289 0 0 0 34.419289 34.419289h447.450756a34.419289 34.419289 0 0 0 34.314671-34.419289V593.915815zM700.678382 955.26604V559.496526a34.419289 34.419289 0 0 1 34.419289-34.419289H891.082959L512.366163 145.837352 132.603188 525.077237h155.462198a34.419289 34.419289 0 0 1 34.419289 34.419289v395.769514z" fill=""></path></symbol><symbol id="icon-shoucang" viewBox="0 0 1024 1024"><path d="M896.288 6.08c29.76 11.52 48.704 39.2 48.704 69.728V948.16a75.008 75.008 0 0 1-48.704 69.728 75.84 75.84 0 0 1-29.76 5.408 82.592 82.592 0 0 1-56.192-21.696l-298.368-286.976L213.6 1001.6a82.88 82.88 0 0 1-56.128 22.4c-10.24 0-20.352-2.08-29.76-6.08a75.104 75.104 0 0 1-48.704-69.728V75.84c0-30.528 18.944-58.24 48.704-69.728 9.408-4.064 19.52-6.144 29.76-6.112h708.992c10.24 0.032 20.384 2.08 29.824 6.08z" fill="#707070"></path></symbol><symbol id="icon-mulu" viewBox="0 0 1024 1024"><path d="M113.18752 330.08a109.248 109.248 0 1 1-7.648-218.368 109.248 109.248 0 0 1 7.648 218.368z m0 291.104a109.248 109.248 0 1 1-7.648-218.368 109.248 109.248 0 0 1 7.648 218.368z m0 291.104a109.248 109.248 0 1 1-7.648-218.368 109.248 109.248 0 0 1 7.648 218.368zM1022.91552 275.52a18.624 18.624 0 0 1-18.176 18.176H313.31552a18.624 18.624 0 0 1-18.176-18.176V166.336a18.624 18.624 0 0 1 18.176-18.176h691.424a18.624 18.624 0 0 1 18.176 18.176V275.52z m0 291.104a18.624 18.624 0 0 1-18.176 18.176H313.31552a18.624 18.624 0 0 1-18.176-18.176v-109.184a18.624 18.624 0 0 1 18.176-18.176h691.424a18.624 18.624 0 0 1 18.176 18.176v109.184z m0 291.136a18.624 18.624 0 0 1-18.176 18.176H313.31552a18.624 18.624 0 0 1-18.176-18.176v-109.12a18.656 18.656 0 0 1 18.176-18.24h691.424a18.656 18.656 0 0 1 18.176 18.24v109.12z" fill="#707070"></path></symbol><symbol id="icon-xinlang" viewBox="0 0 1024 1024"><path d="M429.664 928C217.024 928 0 824.896 0 654.624c0-88.864 56.032-191.424 152.608-288.224C281.664 236.896 432 178.432 488.576 235.168c25.152 24.672 27.424 68.192 11.424 119.744-8 26.336 24.608 11.456 24.608 12.032 104.032-44.16 194.848-46.432 228 1.12 17.792 25.216 16 60.736 0 101.984-7.456 18.944 2.336 21.76 16.544 26.336 58.912 18.304 124.032 62.464 124.032 140.416-0.096 129.024-185.312 291.2-463.52 291.2z m-39.424-465.344c-169.696 17.216-297.632 120.928-286.816 232.672 10.816 111.744 157.088 188.512 326.848 171.936 169.696-17.216 297.632-120.864 286.752-232.672-10.816-111.744-157.088-188.512-326.784-171.936z m-69.728 356.448c-81.728-26.336-116.032-107.104-80.544-179.936 35.424-71.04 126.304-111.2 206.848-90.528 84 21.76 126.304 100.896 91.968 177.664-34.304 77.92-133.664 120.288-218.272 92.8z m45.696-153.024c-25.696-10.912-60 0.544-76 25.76-16.544 25.792-8.544 56.192 17.152 68.224 26.24 12.032 61.664 0.544 78.272-25.792 16.064-26.368 7.456-56.704-19.424-68.192z m65.184-26.944a25.152 25.152 0 0 0-28.608 10.912c-5.728 10.304-2.88 21.216 7.456 25.792a24.32 24.32 0 0 0 29.152-10.848c5.696-10.368 2.24-21.856-8-25.856z m579.36-187.392a38.912 38.912 0 0 1-49.12 25.216 39.904 39.904 0 0 1-25.76-49.28 192.736 192.736 0 0 0-40.032-189.152 192.448 192.448 0 0 0-183.424-59.552 39.68 39.68 0 0 1-46.848-30.4 39.136 39.136 0 0 1 30.272-46.432 270.112 270.112 0 0 1 258.304 83.68 272.192 272.192 0 0 1 56.608 265.92z m-132.544-43.008a33.6 33.6 0 1 1-64.032-20.672 65.024 65.024 0 0 0-13.696-63.584 64.128 64.128 0 0 0-61.12-20.032 33.28 33.28 0 0 1-40.032-25.76 33.6 33.6 0 0 1 25.696-40.128 130.4 130.4 0 0 1 125.664 40.704 132.16 132.16 0 0 1 27.52 129.472z" fill="#707070"></path></symbol><symbol id="icon-sousuo" viewBox="0 0 1024 1024"><path d="M944.513789 1024a77.19975 77.19975 0 0 1-55.325422-23.345409l-210.780262-210.204622A431.538289 431.538289 0 0 1 433.185369 866.658339C194.134776 866.658339 0.52778 673.051343 0.52778 434.00075S194.134776 1.343161 433.185369 1.343161c239.082573 0 432.657589 193.606996 432.657589 432.657589 0 87.273454-26.41549 173.299688-76.17639 245.222735l210.780263 210.812243c14.135166 14.167146 22.737789 34.378513 22.737789 55.293441a79.182511 79.182511 0 0 1-78.670831 78.670831zM433.185369 158.652842c-151.777139 0-275.347908 123.538788-275.347907 275.347908s123.538788 275.347908 275.347907 275.347907 275.347908-123.538788 275.347908-275.347907-123.538788-275.347908-275.347908-275.347908z"></path></symbol><symbol id="icon-QQ" viewBox="0 0 1024 1024"><path d="M149.9071 430.705026c0-15.993503 10.299816-41.679068 19.959892-53.674195-0.607753-14.873957 5.693687-45.133664 17.113047-54.889701 0-105.685065 81.662824-238.814981 177.080062-284.428451 58.85609-27.98863 120.495049-37.680692 185.044825-37.680692 50.283572 0 105.109299 11.995127 151.938275 31.379252 134.217474 56.521038 164.541155 161.694312 193.073564 295.911786l0.511792 2.846843c16.601256 25.141786 31.443226 54.889701 31.443226 85.661201 0 15.38575-10.299816 30.86746-10.299815 44.589885 0 1.119545 3.454597 5.693687 3.966388 6.845219 49.100053 72.578515 93.689938 151.426483 93.689939 241.661825 0 19.959891-10.811608 89.72355-42.862587 89.72355-22.294943 0-46.828976-54.281948-54.889701-69.123919-0.511792-0.543779-1.119545-0.543779-1.727299-0.543779l-2.846843 2.239091c-18.328554 47.372755-38.288445 91.96264-75.457346 127.404242 32.594758 31.379252 85.117421 28.532409 94.809484 82.814356-2.846843 6.30144-1.727298 13.146659-6.30144 19.384126-32.594758 49.100053-119.95127 55.401493-172.505919 55.401493-69.667697 0-126.25271-18.328554-191.954019-37.680693-13.754412-3.966389-34.322057-1.727298-49.164027-3.454596-34.833849 38.288445-119.95127 48.556274-169.051323 48.556274-43.374379 0-211.338144-2.846843-211.338144-77.088683 0-31.987005 6.909193-41.135289 29.140162-61.702933 17.720801-3.454597 30.86746-13.146659 51.435104-14.266204 2.846843 0 5.117921-0.607753 8.028739-1.119546 0.543779-0.511792 1.119545-0.511792 1.119545-2.23909l-1.119545-1.727298c-39.407991-9.148284-94.809484-108.563896-103.382001-149.699185l-2.846844-1.663324c-3.966389 0-5.693687 8.572517-6.845219 11.419361-12.538906 29.140162-42.254834 60.583388-75.361384 63.97401H29.923843c-4.574142 0-2.846843-4.574142-6.30144-5.693687a139.399369 139.399369 0 0 1-13.146659-57.128791c0-114.257583 54.889701-198.799238 143.973511-266.195858a77.152657 77.152657 0 0 1-4.542155-29.811889z" fill="#707070"></path></symbol><symbol id="icon-weixin" viewBox="0 0 1024 1024"><path d="M692.992 347.968c-172 0-308.032 128.192-308.032 285.856 0 26.464 4 51.872 11.488 75.808-11.328 0.992-22.688 1.472-34.048 1.472-45.536 0-81.504-8.96-126.976-17.984l-126.496 63.36 36.032-108.768c-90.56-63.328-144.992-145.184-144.992-244.384C-0.032 231.232 162.976 96 362.432 96c178.048 0 334.56 108.224 365.536 253.952a260.992 260.992 0 0 0-34.976-1.984zM244.416 249.728c-27.008 0-54.528 17.984-54.528 45.44 0 26.912 27.456 44.896 54.528 44.896 27.456 0 45.536-17.984 45.536-44.896 0-27.52-18.016-45.44-45.536-45.44z m652.544 588L924.416 928l-99.52-54.368c-36.448 8.96-72.992 18.432-108.96 18.432-172.512 0-308.032-117.728-308.032-262.432s135.488-262.432 308.032-262.432c162.944 0 308.032 117.728 308.032 262.432 0.064 81.44-53.984 153.792-127.008 208.096zM498.464 249.728c-27.456 0-54.528 17.984-54.528 45.44 0 26.912 27.008 44.896 54.528 44.896 27.008 0 45.024-17.984 45.024-44.896-0.032-27.52-18.048-45.44-45.024-45.44z m117.472 262.304c-18.016 0-35.968 17.984-35.968 35.872 0 18.432 18.016 36.48 35.968 36.48 27.456 0 45.536-17.984 45.536-36.48-0.064-17.888-18.016-35.872-45.536-35.872z m199.584 0c-18.016 0-36.032 17.984-36.032 35.872 0 18.432 18.016 36.48 36.032 36.48 26.976 0 45.536-17.984 45.536-36.48-0.128-17.888-18.528-35.872-45.536-35.872z" fill="#707070"></path></symbol><symbol id="icon-fenxiang" viewBox="0 0 1024 1024"><path d="M1024 810.592a213.056 213.056 0 0 1-213.28 213.28 213.024 213.024 0 0 1-211.904-235.936l-240.032-120.064A213.12 213.12 0 0 1 0.224 511.936a213.12 213.12 0 0 1 358.56-155.936l240.032-120.064A213.12 213.12 0 0 1 810.72 0 213.12 213.12 0 0 1 1024 213.28a213.12 213.12 0 0 1-358.56 155.968l-240.032 120.064c0.672 7.264 1.376 15.296 1.376 22.656s-0.672 15.36-1.376 22.656l240.032 120.064A213.184 213.184 0 0 1 1024 810.592z" fill="#707070"></path></symbol><symbol id="icon-erweima" viewBox="0 0 1024 1024"><path d="M466.112 464.896H1.216V0h464.896v464.896z m0 557.888H1.216V557.888h464.896v464.896zM373.12 371.936V92.992H94.176v278.944h278.944z m0 557.152V650.88H94.176v278.24h278.944zM280.16 278.944H187.168V185.952h92.992v92.992z m0 557.888H187.168v-92.992h92.992v92.992zM1024 464.896H559.104V0H1024v464.896z m0 371.936h-278.944v-92.992h-92.992v278.944h-92.992V557.888h278.944v92.992h92.992v-92.992H1024v278.944z m-92.992-464.896V92.992h-278.944v278.944h278.944z m-92.96-92.992h-92.992V185.952h92.992v92.992z m0 743.84h-92.992v-92.992h92.992v92.992z m185.952 0h-92.992v-92.992H1024v92.992z"></path></symbol><symbol id="icon-daima" viewBox="0 0 1024 1024"><path d="M376.192 683.104a10.592 10.592 0 0 1-15.264 0l-154.656-154.656a10.624 10.624 0 0 1 0-15.264l154.656-154.656c2.016-2.048 4.768-3.232 7.648-3.232s5.632 1.152 7.616 3.232l16.608 16.608a10.624 10.624 0 0 1 0 15.264L262.4 520.832l130.432 130.432a10.752 10.752 0 0 1 3.232 7.648c0 2.88-1.152 5.632-3.232 7.616l-16.64 16.576z m88.96 57.728a10.56 10.56 0 0 1-12.928 7.296l-20.576-5.632a10.752 10.752 0 0 1-7.296-13.28L548.16 300.832a10.56 10.56 0 0 1 12.928-7.328l20.576 5.632c5.632 1.664 8.96 7.648 7.296 13.28l-123.808 428.416z m187.2-57.728a10.624 10.624 0 0 1-15.296 0l-16.576-16.576a10.592 10.592 0 0 1 0-15.264l130.4-130.432L620.48 390.4a10.624 10.624 0 0 1 0-15.264l16.576-16.608a10.624 10.624 0 0 1 15.296 0l154.624 154.656a10.624 10.624 0 0 1 0 15.264l-154.624 154.656z" fill="#707070"></path></symbol><symbol id="icon-yuedu" viewBox="0 0 1024 1024"><path d="M1011.616 551.136c-104.96 172.8-297.12 289.184-499.616 289.184S117.312 723.392 12.384 551.136C5.536 539.2 0.96 526.048 0.96 511.808s4.544-27.392 11.424-39.328C117.312 300.224 309.536 183.296 512 183.296s394.656 116.928 499.616 289.184c6.848 11.936 11.424 25.088 11.424 39.328s-4.576 27.392-11.424 39.328z m-278.912-240.672a253.152 253.152 0 0 1 34.816 128.32c0 140.864-114.656 255.52-255.52 255.52s-255.52-114.656-255.52-255.52a253.44 253.44 0 0 1 34.784-128.32c-88.992 45.6-163.104 117.504-217.28 201.312C171.52 662.368 328.928 767.296 512 767.296s340.48-104.96 438.016-255.52c-54.144-83.808-128.352-155.68-217.312-201.312zM512 265.408c-95.232 0-173.408 78.144-173.408 173.408 0 14.816 12.576 27.392 27.392 27.392s27.392-12.576 27.392-27.392c0-65.024 53.6-118.624 118.624-118.624 14.816 0 27.392-12.576 27.392-27.392s-12.576-27.392-27.392-27.392z"></path></symbol><symbol id="icon-pinglun" viewBox="0 0 1025 1024"><path d="M806.912 402.592c0 161.728-180 292.576-402.272 292.576-34.848 0-68.576-3.424-100.576-9.12a480.352 480.352 0 0 1-158.848 73.152c-15.424 4-32 6.848-49.152 9.12h-1.728c-8.576 0-16.576-6.88-18.272-16.576-2.272-10.88 5.152-17.696 11.424-25.152 22.272-25.152 47.424-47.456 66.848-94.848-92.576-53.728-152-136.576-152-229.152 0-161.728 180-292.576 402.272-292.576 222.304 0 402.304 130.848 402.304 292.576z m-731.424 0c0 62.848 42.304 123.424 115.424 165.728l55.424 32-20 48c12-6.848 24-14.272 35.424-22.272l25.152-17.728 30.272 5.728c28.576 5.152 57.696 8 87.424 8 178.304 0 329.152-100.576 329.152-219.424s-150.848-219.424-329.152-219.424S75.488 283.744 75.488 402.592z m865.696 470.272c6.304 7.424 13.696 14.272 11.424 25.152-2.304 10.272-10.88 17.696-20 16.576a422.816 422.816 0 0 1-49.152-9.12 479.712 479.712 0 0 1-158.848-73.152c-32 5.696-65.696 9.12-100.576 9.12-103.424 0-198.304-28.576-269.728-75.456a714.88 714.88 0 0 0 50.304 2.304c122.848 0 238.88-35.424 327.456-99.424 95.424-69.728 148-164.032 148-266.304 0-29.728-4.576-58.848-13.12-86.848 96.576 53.152 159.424 137.728 159.424 233.152 0 93.152-59.456 175.424-152 229.12 19.392 47.456 44.544 69.76 66.816 94.88z"></path></symbol><symbol id="icon-xihuan-" viewBox="0 0 1024 1024"><path d="M486.88 940.288L130.336 596.384C125.76 592.384 0.064 477.536 0.064 340.416c0-167.424 102.272-267.392 273.088-267.392 100 0 193.696 78.848 238.848 123.424 45.12-44.576 138.816-123.424 238.848-123.424 170.848 0 273.088 99.968 273.088 267.392 0 137.12-125.696 251.968-130.816 257.088L537.12 940.288c-6.848 6.88-16 10.304-25.12 10.304-9.12 0-18.272-3.424-25.12-10.304z"></path></symbol><symbol id="icon-jubao" viewBox="0 0 1024 1024"><path d="M1013.12 877.888a71.744 71.744 0 0 1-1.184 71.808 72.864 72.864 0 0 1-62.656 35.904H73.984a72.928 72.928 0 0 1-62.688-35.904 71.872 71.872 0 0 1-1.152-71.808L447.808 75.584a72.512 72.512 0 0 1 127.68 0L1013.12 877.888zM593.664 346.24a13.824 13.824 0 0 0-5.664-10.816c-3.424-2.848-8.576-6.272-13.696-6.272H448.96c-5.12 0-10.24 3.424-13.696 6.272-4 2.848-5.664 8.544-5.664 11.968l9.664 260.416c0 7.424 8.544 13.088 19.392 13.088h105.408c10.24 0 18.784-5.664 19.36-13.088l10.24-261.568z m-9.088 366.432a18.496 18.496 0 0 0-18.24-18.816h-109.408c-10.24 0-18.24 8.544-18.24 18.816v108.224c0 10.272 7.968 18.816 18.24 18.816h109.408c10.24 0 18.24-8.544 18.24-18.816v-108.224z"></path></symbol><symbol id="icon-dashang-" viewBox="0 0 1024 1024"><path d="M977.883349 705.071646c0 307.614317-400.867476 318.928354-459.700467 318.928354-4.684967 0-7.202739-0.063741-7.202739-0.063741s-2.517772 0.063741-7.202739 0.063741c-58.832991 0-459.700467-11.314037-459.700467-318.928354 0-331.963399 372.407096-488.638904 372.407097-488.638904S291.679054 172.355805 291.679054 78.847681c0-75.851852 185.582073-78.847681 215.317273-78.847681h7.967632c29.67146 0 215.317274 3.0277 215.317273 78.847681 0 93.508123-124.83685 137.55319-124.83685 137.55319s372.438967 156.707376 372.438967 488.670775zM582.210769 271.983069a60.235294 60.235294 0 0 1 3.314534-112.311734c16.700156-6.08727 77.317896-35.631248 84.074448-73.844009-17.911236-11.569001-75.979334-25.496421-154.572051-25.49642h-8.031373c-78.656458 0-136.660815 13.92742-154.572051 25.49642 6.820293 38.531466 68.202926 68.266667 84.074448 73.844009a60.235294 60.235294 0 0 1 3.314535 112.311734c-3.250794 1.402303-335.501027 145.967009-335.501027 433.152318 0 246.231684 332.855773 258.693059 399.592654 258.69306l5.577342-0.063741H512.733022l5.513601 0.063741c66.736881 0 399.592655-12.461376 399.592655-258.69306C917.775537 416.484034 585.557174 273.385372 582.210769 271.983069z m36.555493 386.971926a24.890881 24.890881 0 0 1 21.512605 37.256645 24.763399 24.763399 0 0 1-21.512605 12.397635h-84.010706v65.238967a24.85901 24.85901 0 1 1-49.65428 0v-65.238967h-79.96315a24.85901 24.85901 0 1 1 0-49.718021h79.96315v-50.737877h-82.002863a24.890881 24.890881 0 0 1-21.512605-37.256645 24.763399 24.763399 0 0 1 21.512605-12.397635h42.579022l-41.049237-41.112978a24.922751 24.922751 0 0 1 17.528789-42.451541c6.533458 0 12.907563 2.645254 17.52879 7.26648l70.178898 70.306381 70.178898-70.306381a24.85901 24.85901 0 0 1 35.057579 35.185061l-41.049238 41.112978h42.579023a24.85901 24.85901 0 1 1 0 49.718021h-81.939122v50.737877h84.074447z"></path></symbol><symbol id="icon-shouqi" viewBox="0 0 1024 1024"><path d="M906.592 828.768a40.288 40.288 0 0 1-57.152 0L512 491.36 174.592 828.768a40.416 40.416 0 0 1-57.216 0L11.936 723.904a40.96 40.96 0 0 1 0-57.792L483.392 195.232a40.288 40.288 0 0 1 57.152 0l471.52 470.88a40.96 40.96 0 0 1 0 57.792l-105.472 104.864z" fill="#707070"></path></symbol><symbol id="icon-youjiantou" viewBox="0 0 1024 1024"><path d="M704 512a22.56 22.56 0 0 0-6.656-15.136l-307.456-307.488a22.72 22.72 0 0 0-15.136-6.56 22.592 22.592 0 0 0-15.136 6.56L326.592 222.4a22.72 22.72 0 0 0-6.56 15.136c0 5.28 2.624 11.232 6.56 15.136L585.888 512l-259.328 259.328a22.72 22.72 0 0 0-6.56 15.136c0 5.952 2.624 11.232 6.56 15.136l33.024 33.024a22.688 22.688 0 0 0 15.136 6.56 22.592 22.592 0 0 0 15.136-6.56l307.488-307.488A22.432 22.432 0 0 0 704 512z" fill="#707070"></path></symbol><symbol id="icon-zuojiantou" viewBox="0 0 1024 1024"><path d="M320 512c0-5.28 2.688-11.232 6.656-15.136l307.456-307.488a22.72 22.72 0 0 1 15.136-6.56c5.28 0 11.232 2.624 15.136 6.56l33.024 33.024a22.72 22.72 0 0 1 6.56 15.136 22.592 22.592 0 0 1-6.56 15.136L438.112 512l259.328 259.328a22.72 22.72 0 0 1 6.56 15.136 21.312 21.312 0 0 1-6.56 15.136l-33.024 33.024a22.688 22.688 0 0 1-15.136 6.56 22.592 22.592 0 0 1-15.136-6.56l-307.488-307.488A22.432 22.432 0 0 1 320 512z" fill="#707070"></path></symbol><symbol id="icon-xiajiantou" viewBox="0 0 1024 1024"><path d="M512 704a22.56 22.56 0 0 0 15.136-6.656l307.488-307.456a22.72 22.72 0 0 0 6.56-15.136 22.592 22.592 0 0 0-6.56-15.136l-33.024-33.024a22.72 22.72 0 0 0-15.136-6.56 22.592 22.592 0 0 0-15.136 6.56L512 585.888l-259.328-259.328A22.72 22.72 0 0 0 237.536 320a21.312 21.312 0 0 0-15.136 6.56l-33.024 33.024a22.688 22.688 0 0 0-6.56 15.136c0 5.28 2.624 11.232 6.56 15.136l307.488 307.488A22.432 22.432 0 0 0 512 704z" fill="#707070"></path></symbol><symbol id="icon-shangjiantou" viewBox="0 0 1024 1024"><path d="M512 320c5.28 0 11.232 2.688 15.136 6.656l307.488 307.456a22.72 22.72 0 0 1 6.56 15.136 22.592 22.592 0 0 1-6.56 15.136l-33.024 33.024a22.72 22.72 0 0 1-15.136 6.56 22.592 22.592 0 0 1-15.136-6.56L512 438.112l-259.328 259.328a22.72 22.72 0 0 1-15.136 6.56 21.312 21.312 0 0 1-15.136-6.56l-33.024-33.024a22.688 22.688 0 0 1-6.56-15.136c0-5.28 2.624-11.232 6.56-15.136l307.488-307.488A22.432 22.432 0 0 1 512 320z" fill="#707070"></path></symbol><symbol id="icon-shanghuadong" viewBox="0 0 1024 1024"><path d="M512 1024C229.376 1024 0 794.624 0 512 0 229.312 229.376 0 512 0s512 229.312 512 512c0 282.624-229.376 512-512 512z m332.672-546.016a42.304 42.304 0 0 0 0-59.968l-68.032-68.032a42.208 42.208 0 0 0-59.968 0L512 554.656l-204.672-204.672a42.208 42.208 0 0 0-59.968 0l-68.032 68.032a42.304 42.304 0 0 0 0 59.968l302.656 302.656a42.24 42.24 0 0 0 60.064 0l302.624-302.656z"></path></symbol><symbol id="icon-xiahuadong" viewBox="0 0 1024 1024"><path d="M512 0c282.624 0 512 229.376 512 512 0 282.688-229.376 512-512 512S0 794.688 0 512C0 229.376 229.376 0 512 0zM179.328 546.016a42.304 42.304 0 0 0 0 59.968l68.032 68.032a42.208 42.208 0 0 0 59.968 0L512 469.344l204.672 204.672a42.208 42.208 0 0 0 59.968 0l68.032-68.032a42.304 42.304 0 0 0 0-59.968l-302.656-302.656a42.24 42.24 0 0 0-60.064 0l-302.624 302.656z"></path></symbol><symbol id="icon-bokezhuanjia" viewBox="0 0 1024 1024"><path d="M984.544 604.736l38.944-95.168-38.944-92.896V315.904L911.808 243.2l-39.744-94.848-93.248-38.144-71.232-71.264h-102.848L509.568 0l-92.896 38.944H315.904L243.2 111.648 148.352 151.424 110.208 244.672 38.944 315.904v102.816L0 513.888l38.944 92.928v100.768l72.704 72.704 39.776 94.848 93.248 38.144 71.232 71.264h102.848l95.136 38.944 92.928-38.944h100.768l72.704-72.736 94.848-39.744 38.144-93.248 71.264-71.232z" fill="#F0D04D"></path><path d="M685.92 197.888A1280.352 1280.352 0 0 0 228.768 878.176a662.72 662.72 0 0 0 44.96-16.096A1280.544 1280.544 0 0 1 688.032 253.536a649.792 649.792 0 0 0-2.112-55.648z" fill="#B18C25"></path><path d="M569.312 472a448.608 448.608 0 0 0 230.08-68.64 450.24 450.24 0 0 0-28.8-270.016C496.448 223.104 310.848 477.856 305.376 762.464c44.416 5.088 90.304 3.648 136.512-5.216 151.904-29.12 271.264-131.232 328.832-263.04a683.968 683.968 0 0 1-201.408-22.208z" fill="#FFFFFF"></path><path d="M356.512 775.616c-17.408 0-35.008-0.992-52.32-2.976l-9.248-1.056 0.192-9.312A686.4 686.4 0 0 1 767.392 123.648l8.832-2.912 3.712 8.544c13.728 31.552 23.936 64.416 30.336 97.76 11.36 59.36 11.072 119.36-0.864 178.368l-0.864 4.288-3.712 2.336a457.12 457.12 0 0 1-157.824 62.112c-3.296 0.64-6.592 1.216-9.888 1.792 43.872 7.04 88.608 9.76 133.216 8.032l16.288-0.64-6.528 14.944a461.856 461.856 0 0 1-423.584 277.344z m-40.672-22.368a441.632 441.632 0 0 0 438.72-248.384c-3.456 0.064-6.912 0.064-10.368 0.064-59.968 0-119.712-7.744-177.536-23.072l-70.336-18.624 72.736-1.504a436.896 436.896 0 0 0 221.12-64.736c10.592-55.008 10.56-110.88-0.032-166.144a443.392 443.392 0 0 0-25.344-84.8A666.112 666.112 0 0 0 315.84 753.248z" fill="#CFA41E"></path><path d="M375.68 775.616c-17.408 0-35.008-0.992-52.32-2.976l-9.248-1.056 0.192-9.312A686.496 686.496 0 0 1 786.56 123.616l8.832-2.912 3.712 8.544c13.728 31.52 23.936 64.416 30.336 97.76 11.36 59.328 11.072 119.36-0.864 178.368l-0.864 4.288-3.712 2.336a457.12 457.12 0 0 1-157.824 62.112c-3.296 0.64-6.592 1.216-9.888 1.792a682.848 682.848 0 0 0 133.216 8.064l16.288-0.64-6.528 14.944a461.856 461.856 0 0 1-423.584 277.344z m-40.704-22.368a441.632 441.632 0 0 0 438.72-248.384 694.976 694.976 0 0 1-187.872-23.008l-70.336-18.624 72.736-1.504a436.896 436.896 0 0 0 221.12-64.736 437.664 437.664 0 0 0-0.032-166.144 443.392 443.392 0 0 0-25.344-84.8 666.144 666.144 0 0 0-448.992 607.2z" fill="#B18C25"></path><path d="M770.592 133.344a450.24 450.24 0 0 1 28.8 270.016 447.424 447.424 0 0 1-230.08 68.64c30.592 8.096 61.888 14.112 93.696 17.888 35.36 4.224 71.36 5.696 107.712 4.32-57.568 131.776-176.928 233.92-328.832 263.04a450.976 450.976 0 0 1-136.512 5.216c5.472-284.608 191.072-539.36 465.216-629.12" fill="#FFFFFF"></path><path d="M356.512 775.616c-17.408 0-35.008-0.992-52.32-2.976l-9.248-1.056 0.192-9.312A686.4 686.4 0 0 1 767.392 123.648l28-2.912-15.424 8.544c13.728 31.52 23.936 64.416 30.336 97.76 11.36 59.328 11.072 119.36-0.864 178.368l-0.864 4.288-3.712 2.336a457.12 457.12 0 0 1-157.824 62.112c-3.296 0.64-6.592 1.216-9.888 1.792a682.848 682.848 0 0 0 133.216 8.064l16.288-0.64-6.528 14.944a461.856 461.856 0 0 1-423.616 277.312z m-40.672-22.368a441.632 441.632 0 0 0 438.72-248.384 694.976 694.976 0 0 1-187.872-23.008l-70.336-18.624 72.736-1.504a436.896 436.896 0 0 0 221.12-64.736 437.664 437.664 0 0 0-0.032-166.144 443.392 443.392 0 0 0-25.344-84.8A666.08 666.08 0 0 0 315.84 753.248z" fill="#B18C25"></path><path d="M703.648 218.976c-203.68 172.48-361.472 392.832-458.72 653.856l78.624-30.016c75.328-238.688 186.144-416.192 380.64-573.856 0.064-18.432 0.928-31.36-0.544-49.984z" fill="#B18C25"></path><path d="M702.08 192.544A1280.224 1280.224 0 0 0 244.928 872.8a662.72 662.72 0 0 0 44.96-16.096A1280.544 1280.544 0 0 1 704.192 248.16c0.064-18.432-0.64-36.992-2.112-55.616z" fill="#EDEEEE"></path></symbol><symbol id="icon-yonghu" viewBox="0 0 1025 1024"><path d="M1023.664 962.048c-43.952-157.52-162.384-281.104-312.496-340 92.928-61.36 154.128-164.432 154.128-281.056C865.296 152.976 707.008 0 512.4 0 317.776 0 159.408 152.976 159.408 340.992c0 116.656 61.232 219.744 154.272 281.072C164.352 680.752 46.24 803.456 1.808 959.776c-7.36 26 8.48 52.848 35.408 60.016a52.096 52.096 0 0 0 38.448-4.608 49.072 49.072 0 0 0 23.744-29.552c50.848-178.896 220.656-303.808 413.008-303.808 193.312 0 363.344 125.664 413.504 305.616 7.296 26.032 35.04 41.44 62.032 34.464 26.96-7.04 42.944-33.808 35.712-59.856zM260.608 340.992c0-134.208 112.96-243.328 251.808-243.328 138.768 0 251.68 109.136 251.68 243.328 0 133.84-112.912 242.768-251.68 242.768-138.864 0-251.808-108.928-251.808-242.768z m0 0"></path></symbol><symbol id="icon-bianji" viewBox="0 0 1024 1024"><path d="M991.391643 667.523549l-98.216981-81.420917a32.952277 32.952277 0 0 1-11.053409-28.697274c2.335453-14.63657 3.487183-29.865 3.487183-45.093431s-1.15173-30.456862-3.487183-45.093431a30.664813 30.664813 0 0 1 11.053409-28.697274l98.216981-81.404921c11.629274-9.373803 14.524596-26.345825 6.974365-39.238804l-70.91138-123.571038c-7.55023-12.892978-23.242553-18.747606-37.191283-13.468843l-120.307803 45.093431c-9.885683 3.519175-20.923096 2.335453-29.065188-4.09504-23.834414-18.155745-49.988284-33.976037-78.461611-45.685292-9.869687-4.09504-16.268187-12.876982-18.011778-23.418512L623.493869 25.64199a30.696805 30.696805 0 0 0-30.216918-25.76996h-141.806764c-15.116457 0-27.897462 11.133391-30.216918 25.76996l-20.923096 127.090213a31.192689 31.192689 0 0 1-18.011779 23.418512c-27.897462 11.709256-54.051332 27.529548-77.885745 45.685292-8.238069 6.558463-19.355464 8.126095-29.065188 4.09504L155.059658 180.837616c-13.948731-5.278763-29.641053 0.591861-37.191283 13.468843l-70.911381 123.571038c-7.55023 12.892978-4.654909 29.865 6.974366 39.238804l98.21698 81.404921c8.142092 7.03835 12.205139 17.563883 11.037413 28.121409a289.58013 289.58013 0 0 0-3.487182 45.093431c0 15.228431 1.167726 30.456862 3.487182 45.093431a30.648817 30.648817 0 0 1-11.037413 28.697274l-98.21698 81.404921c-11.629274 9.373803-14.524596 26.345825-6.974366 39.238803l70.911381 123.571038c7.55023 12.876982 23.242553 18.747606 37.191283 13.468844l120.307803-45.685293c9.885683-3.519175 20.923096-2.335453 29.065188 4.09504 23.834414 18.155745 49.988284 33.976037 77.885745 45.685293 9.869687 4.09504 16.268187 12.876982 18.011779 23.418511l20.923096 127.090213a30.680809 30.680809 0 0 0 30.216918 25.76996h141.806764c15.116457 0 27.897462-11.133391 30.216918-25.76996l20.923096-127.090213a30.664813 30.664813 0 0 1 18.587643-23.418511c27.897462-11.709256 54.051332-27.529548 77.885746-45.685293a28.873233 28.873233 0 0 1 29.065188-4.09504l120.307803 45.093431c13.948731 5.278763 29.641053-0.591861 37.191283-13.468843l70.91138-123.571038c7.566227-11.709256 4.654909-28.697274-6.974365-38.055081z m-468.434211 27.513552c-100.536437 0-181.3335-81.996782-181.3335-182.725174s81.372928-183.317035 181.3335-183.317035c100.552433 0 181.3335 81.996782 181.3335 183.317035 0 101.320253-80.781067 182.725174-181.3335 182.725174z m0 0"></path></symbol><symbol id="icon-shanchu" viewBox="0 0 1024 1024"><path d="M392.176 885.024c29.056 0 43.568-21.936 43.568-43.888v-563.2c0-29.264-21.792-43.888-43.568-43.888-29.056 0-43.584 21.936-43.584 43.888v555.888c0 29.264 21.792 51.2 43.584 51.2zM973.168 95.088H580.992v-51.2C580.992 21.936 559.2 0 530.16 0h-43.568c-29.056 0-50.832 21.936-50.832 43.888v43.888H43.568C21.792 95.088 0 117.024 0 138.976c0 29.264 21.792 43.888 43.568 43.888h72.624v746.064c0 51.2 43.568 95.088 94.416 95.088h602.784c50.832 0 94.416-43.888 94.416-95.088V182.864h72.624c29.056 0 43.584-21.936 43.584-43.888-0.016-21.952-29.072-43.888-50.848-43.888z m-167.04 789.936c0 29.264-21.792 43.888-43.584 43.888H254.192c-29.056 0-43.584-21.936-43.584-43.888V182.864h602.784v702.176h-7.264z m-181.568 0c29.056 0 43.568-21.936 43.568-43.888v-563.2c0-29.264-21.792-43.888-43.568-43.888-29.056 0-43.584 21.936-43.584 43.888v555.888c0.016 29.264 14.544 51.2 43.584 51.2z m0 0"></path></symbol><symbol id="icon-spinner" viewBox="0 0 1024 1024"><path d="M384 149.33333333333334a128 128 0 1 1 256 0 128 128 0 0 1-256 0z m271.52 112.48a128 128 0 1 1 256 0 128 128 0 0 1-256 0zM832 533.3333333333334a64 64 0 1 1 127.968-0.032A64 64 0 0 1 832 533.3333333333334z m-112.48 271.52a64 64 0 1 1 127.968-0.032 64 64 0 0 1-127.968 0.032zM448 917.3333333333334a64 64 0 1 1 128 0 64 64 0 1 1-128 0z m-271.52-112.48a64 64 0 1 1 128 0 64 64 0 1 1-128 0z m-32-543.04a96 96 0 1 1 192 0 96 96 0 1 1-192 0zM56 533.3333333333334a72 72 0 1 1 144 0 72 72 0 0 1-144 0z"></path></symbol><symbol id="icon-weiye" viewBox="0 0 1024 1024"><path d="M713.6 515.2c0 9.6-3.2 16-9.6 22.4L233.6 1008c-6.4 6.4-16 9.6-22.4 9.6-9.6 0-16-3.2-22.4-9.6l-51.2-51.2c-6.4-6.4-9.6-12.8-9.6-22.4 0-9.6 3.2-16 9.6-22.4l396.8-396.8L137.6 118.4C131.2 115.2 128 105.6 128 96c0-9.6 3.2-16 9.6-22.4L188.8 22.4c6.4-6.4 16-9.6 22.4-9.6 9.6 0 16 3.2 22.4 9.6L704 492.8c6.4 6.4 9.6 16 9.6 22.4z m0 0M860.8 1017.6c38.4 0 67.2-32 67.2-67.2V83.2c0-38.4-32-67.2-67.2-67.2-38.4 0-67.2 32-67.2 67.2v867.2c-3.2 35.2 28.8 67.2 67.2 67.2z"></path></symbol><symbol id="icon-shouye" viewBox="0 0 1024 1024"><path d="M342.4 515.2c0-9.6 3.2-16 9.6-22.4L822.4 22.4c6.4-6.4 16-9.6 22.4-9.6 9.6 0 16 3.2 22.4 9.6l51.2 51.2c6.4 6.4 9.6 16 9.6 22.4 0 9.6-3.2 16-9.6 22.4L521.6 515.2l396.8 396.8c6.4 6.4 9.6 16 9.6 22.4 0 9.6-3.2 16-9.6 22.4l-51.2 51.2c-6.4 6.4-16 9.6-22.4 9.6-9.6 0-16-3.2-22.4-9.6L352 537.6c-6.4-3.2-9.6-12.8-9.6-22.4z m0 0M195.2 1017.6c-38.4 0-67.2-32-67.2-67.2V83.2C128 44.8 160 16 195.2 16c38.4 0 67.2 32 67.2 67.2v867.2c3.2 35.2-28.8 67.2-67.2 67.2z"></path></symbol></svg><div class="csdn-toolbar csdn-toolbar csdn-toolbar-skin-black ">        <div class="container row center-block ">          <ul class="col-md-6 pull-left left-menu clearfix">            <li>              <a href="http://www.csdn.net/?ref=toolbar" title="CSDN首页" target="_blank">              <svg class="icon" aria-hidden="true">                  <use xlink:href="#toolbar-csdnlogo"></use>              </svg>                </a>            </li>            <li><a href="http://blog.csdn.net/?ref=toolbar" title="博客" target="_blank">博客</a></li>            <li><a href="http://edu.csdn.net/?ref=toolbar" title="学院" target="_blank">学院</a></li>            <li><a href="http://download.csdn.net/?ref=toolbar" title="下载" target="_blank">下载</a></li>            <li class="show-more">            <a href="javascript:;">更多<i class="iconfont-toolbar CSDN_iconfont toolbar-xiajiantou"></i></a>              <div class="more">                <div><a href="http://bbs.csdn.net/?ref=toolbar" target="_blank">论坛</a></div>                <div><a href="http://ask.csdn.net/?ref=toolbar" target="_blank">问答</a></div>                <div><a href="http://huiyi.csdn.net/?ref=toolbar" target="_blank">活动</a></div>                <div><a href="https://gitee.com/?utm_source=csdn_toolbar" target="_blank">码云</a></div>                <div><a href="http://mall.csdn.net/?ref=toolbar" target="_blank">商城</a></div>              </div>            </li>          </ul>          <div class="pull-right login-wrap unlogin">            <ul class="btns">              <li>                <div class="search_bar">                  <input type="text" class="input_search" name="">                  <button type="button" class="btn btn-nobg-noborder btn-search ico_search"><i class="iconfont-toolbar CSDN_iconfont toolbar-sousuo"></i></button>                </div>              </li>              <li class="write-bolg-btn"><a class="" href="http://write.blog.csdn.net/postedit?ref=toolbar" target="_blank"><i class="iconfont-toolbar CSDN_iconfont toolbar-tianxie"></i>写博客</a></li>              <li class="userinfo"><a href="https://passport.csdn.net/account/login?ref=toolbar">登录</a><span></span><a href="http://passport.csdn.net/account/mobileregister?ref=toolbar&amp;action=mobileRegister">注册</a></li>              <li class="userLogin">                <div class="loginCenter"><a href="http://my.csdn.net/?ref=toolbar"><img class="login_img" src="./C#三十二 泛型的理解和使用 - CSDN博客_files/100x100.jpg"><span class="userName"></span></a><a class="set-nick" href="https://passport.csdn.net/account/profile">设置昵称<span class="write-icon"></span></a><i class="iconfont-toolbar CSDN_iconfont toolbar-xiajiantou"></i></div>                <div class="userControl">                  <div><a href="http://my.csdn.net/?ref=toolbar" target="_blank">主页</a></div>                  <div><a href="http://msg.csdn.net/letters?ref=toolbar" target="_blank">消息</a></div>                  <div><a href="https://my.csdn.net//my/account/changepwd?ref=toolbar" target="_blank">设置</a></div>                  <div><a href="http://bbs.csdn.net/forums/Service?ref=toolbar" target="_blank">反馈</a></div>                  <div><a href="https://passport.csdn.net/account/logout?ref=toolbar">退出</a></div>                </div>              </li>            </ul>          </div>        </div>    </div><script class="toolbar-s" type="text/javascript" src="./C#三十二 泛型的理解和使用 - CSDN博客_files/iconfont(1).js"></script>

<div class="container clearfix">
    <main>
        <article>
            <h1 class="csdn_top">C#三十二 泛型的理解和使用</h1>
            <div class="article_bar clearfix">
                <div class="artical_tag">
                    <span class="original">原创</span>
                    <span class="time">2016年05月11日 21:52:04</span>
                </div>
				<ul class="article_tags clearfix csdn-tracking-statistics" data-mod="popu_377">
					<li class="tit">标签：</li>
					
					<li><a href="http://so.csdn.net/so/search/s.do?q=%E6%B3%9B%E5%9E%8B&amp;t=blog" target="_blank">泛型</a> <span>/</span></li>
					
					<li><a href="http://so.csdn.net/so/search/s.do?q=c#&amp;t=blog" target="_blank">c#</a> <span>/</span></li>
					
					<li><a href="http://so.csdn.net/so/search/s.do?q=ado.net&amp;t=blog" target="_blank">ado.net</a> <span style="display: none;">/</span></li>
					
				</ul>
                <ul class="right_bar">
                    <li><button class="btn-noborder"><i class="icon iconfont icon-read"></i><span class="txt">3963</span></button></li>
                    <!--<li><button class="btn-noborder"><i class="icon iconfont icon-dashang-"></i><span class="txt">0</span></button></li>-->

                    <li class="edit" style="display: none;">
                        <a class="btn-noborder" href="http://write.blog.csdn.net/postedit/51378631">
                            <i class="icon iconfont icon-bianji"></i><span class="txt">编辑</span>
                        </a>
                    </li>
                    <li class="del" style="display: none;">
                        <a class="btn-noborder" onclick="javascript:deleteArticle(fileName);return false;">
                            <i class="icon iconfont icon-shanchu"></i><span class="txt">删除</span>
                        </a>
                    </li>
                </ul>
            </div>
            <div id="article_content" class="article_content csdn-tracking-statistics" data-mod="popu_307" data-dsm="post" style="overflow: hidden;">
                
<p align="left" style="background:rgb(248,248,248)">日常生活中的事物都是有类型的，比如我们说“一个女人”，那么“女”就是这个人的类型。我们可以说“女人都是水做的”，那么听者都知道这是在说“女”这种类型的人。再比如你去肉店买肉，你可以对老板说“我要十斤猪肉”，那么老板一定知道你是在要“猪”这种类型的肉。日常生活中的这些语言都是带有类型的，但是在日常生活中还有一些语言是不带类型的。比如我们经常说“人是贪婪的”，这里的人就没有类型之分，听者都知道是指所有的人；我们也可以在肉店里指着猪肉说“给我来十斤肉”，肉店老板同样知道你要的是猪肉。</p>
<p align="left" style="background:rgb(248,248,248)">程序语言必须能够对现实中的数据进行表述，对于C#语言来讲可以使用数据类型对数据进行精确的描述。事实上这种程序语言被称作强类型语言，在这样的语言当中出现的数据都必须带有数据，这样的语言还有很多，比如C++、Java、Python等。与强类型语言对应的得是弱类型语言，比如VB、JavaScript等，他们没有数据类型概念。从肉店买肉这个例子我们可以看出这两种类型的各自的优缺点。强类型语言显然可以精确的表达逻辑但表达过于罗嗦，无论是肉店老板还是旁边的人听到“我要十斤猪肉”这句话都可以精确的知道你的意思。弱类型语言的特点就是表达简洁但逻辑容易发生混乱，比如你还可以指着猪肉说“来十斤”，很显然你的话只有肉店老板先看懂你的手势才能懂，容易引起逻辑的混乱。</p>
<p align="left" style="background:rgb(248,248,248)">&nbsp;计算机程序是推理性语言，中间某一行逻辑出错都会导致最终的结果出现错误，所以从这个角度出发，显然在买猪肉这个问题上强类型语言获胜。我们再来看关于人的那个表述，对于“人是贪婪的”这句话，是在描述一种通用性的规律。对于这个问题用传统的强类型语言来描述就是“女人是贪婪的，男人是贪婪的”，这样说显然非常啰嗦，这也是强类型语言都存在一个缺陷。比如在程序中经常会用到某些通用的算法，用强类型语言编写这些通用的算法会和上面出现一样的情况，需要每种数据类型都提供一个相同的算法。泛型技术就是用可以用来解决此类问题。</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>重点：</p>
<p>Ø&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;理解泛型的概念</p>
<p>Ø&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;泛型的定义及其应用</p>
<p>Ø&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;泛型类</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>预习功课：</p>
<p>Ø&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;泛型的概念</p>
<p>Ø&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;如何定义泛型及其应用</p>
<p>Ø&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong>如何使用泛型类</strong></p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><strong>9.1 为什么使用泛型</strong></p>
<p>&nbsp;&nbsp;&nbsp; 假如让你用C#编写一个求两个数和的方法，你会怎么做？若求的两个数是整数，可以定义如下方法：</p>
<p>&nbsp;&nbsp;&nbsp; int Add(int a,int b)</p>
<p>&nbsp;&nbsp;&nbsp; { return a+b;&nbsp; }</p>
<p>若求的是两个double型的数的和，可以定义如下方法：</p>
<p>static&nbsp; double Add(double a,double b)</p>
<p>{&nbsp;&nbsp; return a+b;&nbsp;&nbsp;&nbsp; }</p>
<p>若是字符串型的数值进行相加，那么你就可以定义如下方法：</p>
<p>static&nbsp; double Add(string a,string b)</p>
<p>{</p>
<p>&nbsp;&nbsp;&nbsp; return double.Parse(a)+double.Parse(b);</p>
<p>}</p>
<p>假如有一天程序需要升级，你需要其他数据类型求和的算法，日不char、long、decimal等，那你怎么办？继续重载吗？还是想一个更好更通用的方法？我们可能会想到使用object类，于是你写了下面这个通用的算法：</p>
<p>staticobject Add(object a,object b)</p>
<p>{</p>
<p>&nbsp;&nbsp;&nbsp; //decimal为最大的数值类型，所以使用它</p>
<p>&nbsp;&nbsp;&nbsp; return decimal.Parse(a)+decimal.Parse(b);</p>
<p>}</p>
<p>&nbsp;</p>
<p>static voidMain(string[]args)</p>
<p>{</p>
<p>&nbsp;&nbsp;&nbsp; decimal r1=(decimal)Add(3,3);</p>
<p>&nbsp;&nbsp;&nbsp; decimal r2=(decimal)Add(3.3,3.3);</p>
<p>&nbsp;&nbsp;&nbsp; decimal r3=(decimal)Add(＂3.3＂，＂3.3＂)；</p>
<p>&nbsp;&nbsp;&nbsp; Console.WriteLine(＂{0},{1},{2}＂,r1,r2,r3)&nbsp;;</p>
<p>}</p>
<p>staticobject Add(object a,object b)</p>
<p>{</p>
<p>&nbsp;&nbsp;&nbsp; returnConvert.ToDecimal(a)+Convert.ToDecimal(b);</p>
<p>}</p>
<p>&nbsp;</p>
<p>运行结果：</p>
<p>&nbsp;&nbsp;&nbsp; 6,6.6,6.6</p>
<p>&nbsp;&nbsp;&nbsp; </p>
<p>这里用到的技术就是装箱和拆箱，Add方法首先将所有数据类型的数据进行装箱，这样就统一了它们的类型，然后再进行类型转换和计算，计算结果再拆箱就是要求的结果。实际上就是“泛型”思想的一个应用，这里用一个通用方法解决了几乎任何数值类型两个数的求和操作。所以可以说，对于这个求和算法来讲是通用的、泛型的（不需要特定数据类型）。</p>
<p>&nbsp;&nbsp;&nbsp; 但是我们从上面的代码页可以看到问题，就是它执行了频繁的装箱和拆箱操作，我们知道这些操作是非常损耗性能的。另外，装箱和拆箱的代码也显得比较“难看”</p>
<p>因为每次都要进行强类型转换，有没有更好的方式让我们编写这种通用算法呢？于是，C#从2.0版本开始引入了泛型技术，泛型能够给我们带来的两个明显好处是---代码清晰和减少了装箱、拆箱。</p>
<p>&nbsp;</p>
<p><strong>9.2 C#泛型简介</strong></p>
<p>&nbsp;&nbsp;&nbsp; 利用泛型解决交换两数的泛型方法的例子：</p>
<p>using System;</p>
<p>class Program</p>
<p>{</p>
<p>&nbsp;&nbsp;&nbsp; static void Main(string[]args)</p>
<p>&nbsp;&nbsp;&nbsp; {</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int i=1,j=2;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Console.WriteLine(＂交换前:{0},{1}＂,i,j);</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Swap&lt;int&gt;(ref I,ref j); //交换两个数</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Console.WriteLine(＂交换后：{0}＂,i,j);</p>
<p>}</p>
<p>//交换两个数的泛型算法</p>
<p>static void Swap&lt;T&gt;(ref T a,ref T b)</p>
<p>{</p>
<p>&nbsp;&nbsp;&nbsp; T temp=a&nbsp;;</p>
<p>&nbsp;&nbsp;&nbsp; a=b&nbsp;;</p>
<p>&nbsp;&nbsp;&nbsp; b=temp&nbsp;;</p>
<p>}</p>
<p>}</p>
<p>运行结果：</p>
<p>交换前：1,2</p>
<p>交换后：2,1</p>
<p>&nbsp;</p>
<p>&nbsp;&nbsp;&nbsp; 这个交换算法不仅支持任何数字类型，它还支持你在程序中能用到得任何类型。注意，泛型不属于任何命名空间，准确的讲，泛型是一种编译技术。在书写算法的时候，泛型技术允许我们使用一种类型占位符（或称之为类型参数，这里使用的占位符是“T”）作为类型的标识符，而不需要指定特定类型。</p>
<p>&nbsp;&nbsp;&nbsp; 当我们在调用这个算法的时候，编译器使用指定的类型代替类型占位符建立一个针对这种类型的算法。这就是泛型技术，它允许你编写算法的时候不指定具体类型，但调用的时候一定要指定具体类型，编写算法的时候使用“&lt;&gt;”来指定类型占位符，调用的时候一般也使用“&lt;&gt;”来指定具体的数据类型。</p>
<p>&nbsp;&nbsp;&nbsp; 上面这个例子中的Swap&lt;T&gt;，指定了这个泛型方法的占位符是“T”,指定后我们就可以认为有了这么一个数据类型，该类型就是T类型，然后这个T类型既可以作为参数的数据类型又可以作为方法的返回值类型，还可以在方法内部作为局部变量的数据类型。当我们通过Swap&lt;int&gt;(ref i,ref j)来调用这个泛型方法时，在编译时Swap方法中所有出现“T”的地方都会被“int”类型所代替，也就相当于我们建立了</p>
<p>int型的交换方法，如：</p>
<p>&nbsp;&nbsp;&nbsp; static void Swap(ref int a,ref int b)</p>
<p>&nbsp;&nbsp;&nbsp; {</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int temp=a;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; a=b;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; b=temp;</p>
<p>}</p>
<p>l&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 代码重用</p>
<p>泛型最突出优点就是可以代码重用。从上面举的交换算法的例子你也可以看出节省了多少代码。对于一个程序员来讲，写的好的算法是很重要的财富，例如我们一直在使用各种类库，这些类库实际上就是一些优秀的程序员封装的，我们直接调用就是一个代码重用的过程。</p>
<p>l&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 类型安全</p>
<p>类型安全的含义是类型之间的操作必须是兼容的，反之就是类型不安全。类型不安全的代码会在运行时出现异常，比如两个数相加的算法，Convert.ToDecimal(a),a是object类型，a可以是数值“3.3”,a也可以是普通字符串“hello”，如果a是后者那么执行类型转换时必定会出异常，所以说使用Convert.ToDecimal(a)是类型不安全的做法，同样那个求和的方法也是类型不安全的方法。泛型本质上还是强类型的，如果你使用一个不兼容的类型来调用泛型算法，编译器是会报错的，所以说泛型是类型安全的。</p>
<p>l&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 性能更佳</p>
<p>相比装箱和拆箱，泛型效率更高一些。因装箱时系统需要分配内存，而拆箱时需要类型转换，这两个操作都是极其耗费性能的。特别是在执行一些大数据量的算法时（比如排序、搜索等）装箱和拆箱性能损耗尤其严重，因此，在C#中提倡使用泛型。</p>
<p>&nbsp;</p>
<p><strong>9.3 泛型定义及其应用</strong></p>
<p>&nbsp;</p>
<p>使用泛型可以定义泛型方法、泛型类、泛型接口等。在这些泛型结构的定义中，泛型类型参数（或叫占位符）是必须指定的，类型参数所包含的类型就是我们定义的泛型类型，我们可以一次性定义多个泛型类型，如泛型方法Swap&lt;T,U,Z&gt;三个泛型类型。类型参数一般放在所定义的类、方法、接口等标识符后面，并且包含在“&lt;&gt;”里面。</p>
<p>&nbsp;&nbsp;&nbsp; 泛型类型名称的写法也有一定的规则：</p>
<p>l&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;泛型类型名称必须是由字母、数字、下划线组成，并且必须以字符或下划线开头。比如_T、T、TC都是有效的泛型类型名称。</p>
<p>l&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;务必使用有意义泛型类型名称，除非单个字母名称完全可以让人了解它表示的含义，如T.</p>
<p>l&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当类型参数里只有单个泛型类型时，考虑使用T作为泛型类型名，如class Note&lt;T&gt;。</p>
<p>l&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;提倡作为泛型类型名的前缀，如Tkey,TValue。</p>
<p>&nbsp;</p>
<p>前面举例子的时候，一般使用了泛型类型T，但从本质上讲我们可以使用满足上面要求的任何单词。实际上，泛型类型名和类名或接口名的定义规则基本一样。</p>
<p>&nbsp;</p>
<p><strong>9.4 泛型结构体</strong></p>
<p>结构是值类型，通常可以定义结构类型来表示一些简单的对象。比如，我们前面接触的系统结构体Point、DateTime等。但是，这些结构体通常都存储一种类型的数据，我们可以定义一个泛型结构体，它将可以保存任何数据，定义规则：</p>
<p>struct 结构名 &lt;泛型类型列表&gt;</p>
<p>{</p>
<p>&nbsp;&nbsp;&nbsp; 结构体；</p>
<p>}</p>
<p>&nbsp;</p>
<p>要注意泛型类型标识符的定义只能放在结构名的后面，下面我们定义了一个</p>
<p>Point类型的泛型结构体，此时该结构体的X、Y可以保存任何数值类型的坐标数据。代码如下：</p>
<p>classProgram</p>
<p>{</p>
<p>&nbsp;&nbsp; //定义泛型结构体和泛型类型T</p>
<p>&nbsp;&nbsp; struct Point&lt;T&gt;</p>
<p>&nbsp;&nbsp; {</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public T X;&nbsp;&nbsp; </p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public T Y;</p>
<p>}</p>
<p>//测试泛型结构体</p>
<p>static voidMain(string[]args)</p>
<p>{</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //给T类型指定数据类型为int型</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Point&lt;int&gt; a =newPoint&lt;int&gt;();</p>
<ol start="1" type="1">
<ol start="1" type="a">
<li>X=1; </li></ol>
</ol>
<p>a.&nbsp;&nbsp;&nbsp;Y=2;</p>
<p>Console.WriteLine(＂{0},{1}＂,a.X,a.Y);</p>
<p>}</p>
<p>}</p>
<p>运行结果：</p>
<p>1,2</p>
<p>&nbsp;</p>
<p><strong>9.5&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;泛型类</strong></p>
<p><strong>&nbsp;</strong></p>
<p>泛型类封装不属于特定具体数据类型的数据或操作。泛型类最常见的就是泛型集合类，如链表、哈希表、堆栈、队列、树等。对于集合的操作，如从集合中添加、移除、排序等操作大体上都以相同方式进行的，与所存储数据类型无关，即可使用泛型技术。</p>
<p>在泛型类中使用的数据类型，可以是泛型类型也可以是普通的。一般规则是，类中使用的泛型类型越多，代码就会变得越灵活，重用性就越好。但是要注意，类中如果有太多的泛型类型也会使其他开发人员难以阅读或理解该类。要定义类的泛型类型也是在类名后面通过＂＜＞＂定义，类的其他元素除了方法外都不能定义自己的泛型类型，但可以使用该类定义的泛型类型。泛型类定义规则如下：</p>
<p>class 类名&lt;泛型类型列表&gt;</p>
<p>{</p>
<p>&nbsp;&nbsp;&nbsp; //类体</p>
<p>}</p>
<p>//示例代码:</p>
<p>usingSystem;</p>
<p>classProgram</p>
<p>{</p>
<p>&nbsp;&nbsp;&nbsp; //定义泛型类和泛型类型T</p>
<p>&nbsp;&nbsp;&nbsp; private class Node&lt;T&gt;</p>
<p>&nbsp;&nbsp;&nbsp; {</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; private T data;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public Node(T t)</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; data=t;</p>
<p>}</p>
<p>public T Data</p>
<p>{</p>
<p>&nbsp;&nbsp;&nbsp; get{return data;}</p>
<p>&nbsp;&nbsp;&nbsp; set{data=value;}</p>
<p>}</p>
<p>}</p>
<p>static void Main()</p>
<p>{</p>
<p>&nbsp;&nbsp;&nbsp; Node&lt;int&gt;node=newNode&lt;int&gt;(10000);</p>
<p>&nbsp;&nbsp;&nbsp; Console.WriteLine(＂数据：{0}＂,node.Data);</p>
<p>&nbsp;&nbsp;&nbsp; Node&lt;string&gt;snode=newNode&lt;string&gt;(＂壹万＂);</p>
<p>&nbsp;&nbsp;&nbsp; Console.WriteLine(＂数据：{0}＂,snode.Data);</p>
<p>}</p>
<p>}</p>
<p>运行结果：</p>
<p>数据：10000</p>
<p>数据：壹万</p>
<p>&nbsp;</p>
<p>如前所述，类中的成员有很多，如字段、属性、方法、事件、索引器等，其中除了方法之外，其他的类成员都不能自定义的泛型类型，只能使用定义类的时候定义的泛型类型或系统数据类型：</p>
<p>classStudent&lt;T,U&gt;</p>
<p>{</p>
<p>&nbsp;&nbsp;&nbsp; private T name;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //姓名</p>
<p>&nbsp;&nbsp;&nbsp; private U[]score;&nbsp;&nbsp;&nbsp; //各个科目的分数数组</p>
<p>&nbsp;&nbsp;&nbsp; private int ucode;&nbsp;&nbsp; //编号使用系统数据类型</p>
<p>&nbsp;&nbsp;&nbsp; public U this[int n]&nbsp; //返回一个分数</p>
<p>&nbsp;&nbsp;&nbsp; {</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; get{return score[n];</p>
<p>}</p>
<p>}</p>
<p>&nbsp;</p>
<p>类中的方法可以是泛型的，泛型方法的定义规则如下：</p>
<p>访问修饰符 返回类型&nbsp; 方法名&lt;泛型类型列表&gt;(方法参数列表)</p>
<p>如：</p>
<p>public voidShow&lt;T&gt;(T&nbsp; a){}</p>
<p>此泛型方法的使用时要给T指定一个实际的数据类型，如：</p>
<p>Show&lt;string&gt;(＂hello＂);</p>
<p>其中方法的泛型类型列表中定义的泛型类型可以出现在方法的任何位置，包括返回值、参数、方法内，当然也可以不出现，比如下面这些都是合法的：</p>
<p>&nbsp;</p>
<p>public TGet&lt;T&gt;(T a) {return default(T)&nbsp;;}</p>
<p>public intGet&lt;T a)&nbsp; {return 0&nbsp;;}</p>
<p>public TGet&lt;T&gt;(int a)&nbsp; {return default(T);}</p>
<p>&nbsp;</p>
<p>这上面用了default关键字，这个关键字可以取当前类型的默认初始值，这个关键字对于引用类型会返回null,对于数值类型会返回零。</p>
<p>另外，类中也可以出现泛型的重载方法，如：</p>
<p>&nbsp;</p>
<p>voidDoWork(){}</p>
<p>voidDoWork&lt;T&gt;(){}</p>
<p>voidDoWork&lt;T,U&gt;(){}</p>
<p>&nbsp;</p>
<p>由于方法是在类中，所以泛型方法中的数据类型又三种情况，一种是类的泛型类型，一种是泛型方法自身的泛型类型，另外还可以是系统数据类型。泛型方法和非泛型方法或属性、索引器可以互相调用。如：</p>
<p>classStudent&lt;U&gt;</p>
<p>{</p>
<p>&nbsp;&nbsp;&nbsp; private U id;</p>
<p>&nbsp;&nbsp;&nbsp; private string name;</p>
<p>&nbsp;&nbsp;&nbsp; public void ShowHello()</p>
<p>&nbsp;&nbsp;&nbsp; {</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.Show&lt;string&gt;(＂hello＂);&nbsp; //调用泛型方法</p>
<p>}</p>
<p>public void ShowId()</p>
<p>{</p>
<p>&nbsp;&nbsp;&nbsp; this.Show&lt;U&gt;(id); </p>
<p>}</p>
<p>private void Show&lt;S&gt;(S msg)</p>
<p>{</p>
<p>&nbsp;&nbsp;&nbsp; Console.WriteLine(msg);</p>
<p>}</p>
<p>}</p>
<p>类的泛型类型只能用于本类，方法的泛型类型只能用于本方法。不管谁定义的泛型，一旦定义了泛型类型，你可以就当泛型类型是一个真实的类型来用了。</p>
<p>&nbsp;</p>
<p><strong>9.6&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;典型的泛型类</strong></p>
<p>.Net框架类库中，System.Collections.Generic和System.Collections.ObjectModel命名空间中，分别定义了大量的泛型类和泛型接口，这些泛型类多为集合类，因为泛型最大的应用正体现于再集合中对于不同类型对象的管理。</p>
<p>下表列出了，.Net框架中常用的泛型类和泛型接口：</p>
<p>&nbsp;</p>
<table border="1" cellspacing="0" cellpadding="0">
<tbody>
<tr>
<td valign="top" style="background:#E0E0E0">
<p align="center">泛型类</p>
</td>
<td valign="top" style="background:#E0E0E0">
<p align="center">说明</p>
</td>
</tr>
<tr>
<td valign="top">
<p>List&lt;T&gt;</p>
</td>
<td valign="top">
<p>对应于ArrayList集合类，可以动态调整集合容量，通过索引方式访问对象，支持排序、搜索和其他常见操作。</p>
</td>
</tr>
<tr>
<td valign="top">
<p>SortedList&lt;TKey,TValue&gt;</p>
</td>
<td valign="top">
<p>对应于SortedList集合类，表示Key/Value对集合，类似于SortedDictionary&lt;TKey,TValue&gt;集合类,而SortedList在内存上更有优势。</p>
</td>
</tr>
<tr>
<td valign="top">
<p>Queue&lt;T&gt;</p>
</td>
<td valign="top">
<p>对应于Queue集合类，是一种先进先出的集合类，常应用于顺序存储处理。</p>
</td>
</tr>
<tr>
<td valign="top">
<p>Stack&lt;T&gt;</p>
</td>
<td valign="top">
<p>对应于Stack集合类，是一种后进先出的集合类。</p>
</td>
</tr>
<tr>
<td valign="top">
<p>Collection&lt;T&gt;</p>
</td>
<td valign="top">
<p>对应于CollectionBase集合类，是用于自定义泛型集合的基类，提供了受保护的方法来实现定制泛型集合的行为Collection&lt;T&gt;的实例是可修改的。</p>
</td>
</tr>
<tr>
<td valign="top">
<p>Dictionary&lt;TKey,TValue&gt;</p>
</td>
<td valign="top">
<p>对应于Hashtable集合类，表示Key/Value对的集合类，Key必须是唯一的，其元素类型既不是Key的类型，也不是Value的类型，而是KeyValuePair类型。</p>
</td>
</tr>
</tbody>
</table>
<p>&nbsp;</p>
<link rel="stylesheet" href="./C#三十二 泛型的理解和使用 - CSDN博客_files/markdown_views.css">
            </div>
        </article>
        <div class="readall_box csdn-tracking-statistics readall_box_nobg" data-mod="popu_376" style="display: none;">
			<div class="read_more_mask"></div>
            <a class="btn btn-large btn-gray-fred read_more_btn" target="_self">阅读全文</a>
        </div>
        <div class="article_copyright">
            版权声明：本文为 张晨光老师 创作，未经博主允许不得转载，学习交流QQ：3246333637
        </div>
        <!--  <div class="reward_box">
            <div class="tit">
              <button class="btn_reward"><i class="icon iconfont icon-dashang-"></i></button>
            </div>
            <dl class="clearfix">
              <dt><a href="#" target="_blank">近期打赏</a></dt>
              <dd><a href="#" target="_blank"><img src="http://avatar.csdn.net/9/3/2/2_nzf_001.jpg" alt="聂兆芳" title="聂兆芳"></a></dd>
              <dd><a href="#" target="_blank"><img src="http://avatar.csdn.net/9/3/2/2_nzf_001.jpg" alt="聂兆芳" title="聂兆芳"></a></dd>
              <dd><a href="#" target="_blank"><img src="http://avatar.csdn.net/9/3/2/2_nzf_001.jpg" alt="聂兆芳" title="聂兆芳"></a></dd>
              <dd><a href="#" target="_blank"><img src="http://avatar.csdn.net/9/3/2/2_nzf_001.jpg" alt="聂兆芳" title="聂兆芳"></a></dd>
              <dd><a href="#" target="_blank"><img src="http://avatar.csdn.net/9/3/2/2_nzf_001.jpg" alt="聂兆芳" title="聂兆芳"></a></dd>
            </dl>
          </div>-->

        <ul class="article_collect clearfix csdn-tracking-statistics" data-mod="popu_378">
            <li class="tit">本文已收录于以下专栏：</li>
            
            <li><a href="http://blog.csdn.net/column/details/tea-sword.html" target="_blank">道本自然</a></li>
            
        </ul>
        <div class="comment_box clearfix">
            <div id="comment_form">
                <div id="commentsbmitarear"><div class="guest_link"><span class="log_ico"><i class="icon iconfont icon-yonghu"></i></span><span class="txt">目前您尚未登录，请 <a href="https://passport.csdn.net/account/login?from=http%3A%2F%2Fblog.csdn.net%2Fzhangchen124%2Farticle%2Fdetails%2F51378631">登录</a> 或 <a href="http://passport.csdn.net/account/register?from=http%3A%2F%2Fblog.csdn.net%2Fzhangchen124%2Farticle%2Fdetails%2F51378631">注册</a> 后进行评论</span></div></div>
            </div>
        </div>

        <div class="comment_li_outbox"></div>

        <div class="more_comment" style="display: none;">
            <div id="comment_bar" class="trackgin-ad" data-mod="popu_385"></div>
        </div>

        <h3 class="recommend_tit">相关文章推荐</h3>
        <div class="recommend_list clearfix">
            
            <dl class="clearfix csdn-tracking-statistics" data-mod="popu_387" data-poputype="feed" data-feed-show="true" data-dsm="post">
                <dd>
                    <h2><a href="http://blog.csdn.net/haukwong/article/details/7840158" target="_blank" strategy="BlogCommendFromBaidu_0">C# 泛型编程之泛型类、泛型方法、泛型约束</a></h2>
                    <div class="summary">
                        泛型方法

&nbsp;&nbsp;&nbsp; 在C#2.0中，方法可以定义特定于其执行范围的泛型参数，如下所示：


&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;class&nbsp;MyClassT&gt;
&nbsp;&nbsp;&nbsp;&nbsp;...
                    </div>
                    <ul>
                        <li class="avatar_img"><a href="http://blog.csdn.net/haukwong" target="_blank" strategy="BlogCommendFromBaidu_0"><img src="./C#三十二 泛型的理解和使用 - CSDN博客_files/2_haukwong.jpg" alt="haukwong" title="haukwong"></a></li>
                        <li class="user_name"><a href="http://blog.csdn.net/haukwong" target="_blank">haukwong</a></li>
                        <li class="time">2012-08-07 17:36</li>
                        <li class="visited_num"><i class="icon iconfont icon-read"></i><span>69720</span></li>
                    </ul>
                </dd>
            </dl>
            
            <dl class="clearfix csdn-tracking-statistics" data-mod="popu_387" data-poputype="feed" data-feed-show="true" data-dsm="post">
                <dd>
                    <h2><a href="http://blog.csdn.net/zhangchen124/article/details/51365560" target="_blank" strategy="BlogCommendFromBaidu_1">C#三十一  序列化与反序列化</a></h2>
                    <div class="summary">
                        序列化又称串行化，是.NET运行时环境用来支持用户定义类型的流化的机制。其目的是以某种存储形成使自定义对象持久化，或者将这种对象从一个地方传输到另一个地方。
&nbsp;&nbsp;&nbsp;&nbsp;.NET框架提供了两种串行化的方...
                    </div>
                    <ul>
                        <li class="avatar_img"><a href="http://blog.csdn.net/zhangchen124" target="_blank" strategy="BlogCommendFromBaidu_1"><img src="./C#三十二 泛型的理解和使用 - CSDN博客_files/2_zhangchen124.jpg" alt="zhangchen124" title="zhangchen124"></a></li>
                        <li class="user_name"><a href="http://blog.csdn.net/zhangchen124" target="_blank">zhangchen124</a></li>
                        <li class="time">2016-05-10 18:35</li>
                        <li class="visited_num"><i class="icon iconfont icon-read"></i><span>871</span></li>
                    </ul>
                </dd>
            </dl>
            
            <!--dl class="clearfix csdn-tracking-statistics" data-mod="popu_393">
                <dt><a href="http://edu.csdn.net/huiyiCourse/series_detail/64?utm_source=blog10" target="_blank"><img class="maxwidth" src="http://img.blog.csdn.net/20170928113144608" alt="" title=""></a></dt>
                <dd>
                    <div class="summary">
                        <h2><a href='http://edu.csdn.net/topic/python1?utm_source=blog10' target='_blank'>伤心啊！年度热门编程语言排行榜出来了...</a></h2>  <div class="summary">近期，IEEE Spectrum 发布了第四届顶级编程语言交互排行榜。结合 10 个线上数据源的 12 个标准，对 48 种语言进行了排行！此外，七牛云许式伟曾说过Go语言会取代Java...气氛... </div> 
                    </div>
                </dd>
            </dl-->
	<script>
		(function() {
		    var s = "_" + Math.random().toString(36).slice(2);
		    document.write('<div id="' + s + '"></div>');
		    (window.slotbydup=window.slotbydup || []).push({
			id: '4765209',
			container: s,
			size: '808,120',
			display: 'inlay-fix'
		    });
		})();
	</script><div id="_hlx1pxhx3ld"></div><script charset="utf-8" src="./C#三十二 泛型的理解和使用 - CSDN博客_files/ucsm"></script><a href="http://www.baidu.com/cb.php?c=IgF_pyfqnHmsrHTYrHc0IZ0qnfK9ujYzP1D4P1m40Aw-5Hc3rHnYnHb0TAq15HfLPWRznjb0T1YYnWD1Pjf4nA7BnWP-ryf40AwY5HDdnj6znjc1nWT0IgF_5y9YIZ0lQzq-uZR8mLPbUB48ugfEpZNGXy-jULNzTvRETvNzpyN1gvw-IA7GUatvPjqdIAdxTvqdThP-5yF_UvTkn0KzujYk0AFV5H00TZcqn0KdpyfqnHRLPjnvnfKEpyfqnHc4rj6kP0KWpyfqP1cvrHnz0AqLUWYs0ZK45HcsP6KWThnqn1ndP16" target="_blank">
	<dl class="clearfix csdn-tracking-statistics" data-mod="popu_393">
		<dt><img class="maxwidth" src="./C#三十二 泛型的理解和使用 - CSDN博客_files/0f0002JDyQ6901OzLGhM06.jpg" alt="" title=""></dt>
		<dd>
			<div class="summary">
				<h2>蚂蜂窝大数据平台架构及Druid引擎实践!</h2>  <div class="summary">本文主要涉及蚂蜂窝大数据平台的架构设计、离线数据探索、实时数据探索、多维数据分析中Druid引擎引入的背景和带来的价值....</div> 
			</div>
		</dd>
	</dl>
</a>
            
            <dl class="clearfix csdn-tracking-statistics" data-mod="popu_387" data-poputype="feed" data-feed-show="true" data-dsm="post">
                <dd>
                    <h2><a href="http://blog.csdn.net/huangyushi/article/details/8264866" target="_blank" strategy="BlogCommendFromBaidu_2">C#中利用泛型实现实例单件化</a></h2>
                    <div class="summary">
                        C#中利用泛型实现实例单件化



[ 2007-8-17 13:15:00 | By:&nbsp;陈晴阳&nbsp;]







&nbsp;









2

推荐
...
                    </div>
                    <ul>
                        <li class="avatar_img"><a href="http://blog.csdn.net/huangyushi" target="_blank" strategy="BlogCommendFromBaidu_2"><img src="./C#三十二 泛型的理解和使用 - CSDN博客_files/2_huangyushi.jpg" alt="huangyushi" title="huangyushi"></a></li>
                        <li class="user_name"><a href="http://blog.csdn.net/huangyushi" target="_blank">huangyushi</a></li>
                        <li class="time">2012-12-06 14:30</li>
                        <li class="visited_num"><i class="icon iconfont icon-read"></i><span>1355</span></li>
                    </ul>
                </dd>
            </dl>
            
            <dl class="clearfix csdn-tracking-statistics" data-mod="popu_387" data-poputype="feed" data-feed-show="true" data-dsm="post">
                <dd>
                    <h2><a href="http://blog.csdn.net/qq_27466247/article/details/51120050" target="_blank" strategy="BlogCommendFromBaidu_3">C#泛型在项目中的运用</a></h2>
                    <div class="summary">
                        对于C#泛型着东西，其实用处还是很大的，主要是架构设计的好不好，架构设计的好，那么就可以发挥泛型的作用。
例如我要在CS端做一个信息接收管理软件那么可以这样设计：


1.设计一个主框架界面，...
                    </div>
                    <ul>
                        <li class="avatar_img"><a href="http://blog.csdn.net/qq_27466247" target="_blank" strategy="BlogCommendFromBaidu_3"><img src="./C#三十二 泛型的理解和使用 - CSDN博客_files/2_qq_27466247.jpg" alt="qq_27466247" title="qq_27466247"></a></li>
                        <li class="user_name"><a href="http://blog.csdn.net/qq_27466247" target="_blank">qq_27466247</a></li>
                        <li class="time">2016-04-11 11:39</li>
                        <li class="visited_num"><i class="icon iconfont icon-read"></i><span>243</span></li>
                    </ul>
                </dd>
            </dl>
            
            <dl class="clearfix csdn-tracking-statistics" data-mod="popu_387" data-poputype="feed" data-feed-show="true" data-dsm="post">
                <dd>
                    <h2><a href="http://blog.csdn.net/albertma/article/details/6061860" target="_blank" strategy="BlogCommendFromBaidu_4">QQ for ubuntu crash解决之道</a></h2>
                    <div class="summary">
                        装了一个tencent的qq for linux的还没怎么用呢就crash了，在网上找了一下解决之道$whereis qqqq: /usr/bin/qq$sudo gedit /usr/bin/qq&nbsp;...
                    </div>
                    <ul>
                        <li class="avatar_img"><a href="http://blog.csdn.net/ALBERTMA" target="_blank" strategy="BlogCommendFromBaidu_4"><img src="./C#三十二 泛型的理解和使用 - CSDN博客_files/2_albertma.jpg" alt="ALBERTMA" title="ALBERTMA"></a></li>
                        <li class="user_name"><a href="http://blog.csdn.net/ALBERTMA" target="_blank">ALBERTMA</a></li>
                        <li class="time">2010-12-07 22:44</li>
                        <li class="visited_num"><i class="icon iconfont icon-read"></i><span>525</span></li>
                    </ul>
                </dd>
            </dl>
            
            <dl class="clearfix csdn-tracking-statistics downloadElement" data-mod="popu_387" data-poputype="feed" data-feed-show="true" data-dsm="post">
               	<dt><a href="http://download.csdn.net/detail/ouinian/2693907" target="_blank" strategy="BlogCommendFromCsdn_5"><img class="maxwidth" src="./C#三十二 泛型的理解和使用 - CSDN博客_files/doc.svg" alt="" title=""></a></dt>
		<dd>
			<div class="summary">
				<h2><a href="http://download.csdn.net/detail/ouinian/2693907" target="_blank" strategy="BlogCommendFromCsdn_5">C#泛型类的使用的点对点的的的点对点的</a></h2>
				<div class="summary">
				  <ul>
					  <li class="time">2010-09-14 14:48</li>
					  <li class="visited_num fileSize">36KB</li>
					  <li class="download_btn"><a href="http://download.csdn.net/detail/ouinian/2693907" target="_blank">下载</a></li>
				  </ul>
				</div> 
			</div>
		</dd>
            </dl>
            
            <dl class="clearfix csdn-tracking-statistics downloadElement" data-mod="popu_387" data-poputype="feed" data-feed-show="true" data-dsm="post">
               	<dt><a href="http://download.csdn.net/detail/xiongmaokuaile/9729862" target="_blank" strategy="BlogCommendFromCsdn_6"><img class="maxwidth" src="./C#三十二 泛型的理解和使用 - CSDN博客_files/doc.svg" alt="" title=""></a></dt>
		<dd>
			<div class="summary">
				<h2><a href="http://download.csdn.net/detail/xiongmaokuaile/9729862" target="_blank" strategy="BlogCommendFromCsdn_6">理解C#中的泛型.doc</a></h2>
				<div class="summary">
				  <ul>
					  <li class="time">2017-01-05 17:25</li>
					  <li class="visited_num fileSize">84KB</li>
					  <li class="download_btn"><a href="http://download.csdn.net/detail/xiongmaokuaile/9729862" target="_blank">下载</a></li>
				  </ul>
				</div> 
			</div>
		</dd>
            </dl>
            
            <dl class="clearfix csdn-tracking-statistics" data-mod="popu_387" data-poputype="feed" data-feed-show="true" data-dsm="post">
                <dd>
                    <h2><a href="http://blog.csdn.net/learning_hard/article/details/9819475" target="_blank" strategy="BlogCommendFromCsdn_7">[C# 基础知识系列]专题九: 深入理解泛型可变性</a></h2>
                    <div class="summary">
                        引言：

　　在C# 2.0中泛型并不支持可变性的（可变性指的就是协变性和逆变性),我们知道在面向对象的继承中就具有可变性，当方法声明返回类型为Stream,我们可以在实现中返回一个FileStrea...
                    </div>
                    <ul>
                        <li class="avatar_img"><a href="http://blog.csdn.net/lizhi3186575" target="_blank" strategy="BlogCommendFromCsdn_7"><img src="./C#三十二 泛型的理解和使用 - CSDN博客_files/2_lizhi3186575.jpg" alt="lizhi3186575" title="lizhi3186575"></a></li>
                        <li class="user_name"><a href="http://blog.csdn.net/lizhi3186575" target="_blank">lizhi3186575</a></li>
                        <li class="time">2013-08-07 16:48</li>
                        <li class="visited_num"><i class="icon iconfont icon-read"></i><span>1575</span></li>
                    </ul>
                </dd>
            </dl>
            
            <dl class="clearfix csdn-tracking-statistics downloadElement" data-mod="popu_387" data-poputype="feed" data-feed-show="true" data-dsm="post">
               	<dt><a href="http://download.csdn.net/detail/u013430672/6833247" target="_blank" strategy="BlogCommendFromCsdn_8"><img class="maxwidth" src="./C#三十二 泛型的理解和使用 - CSDN博客_files/rar.svg" alt="" title=""></a></dt>
		<dd>
			<div class="summary">
				<h2><a href="http://download.csdn.net/detail/u013430672/6833247" target="_blank" strategy="BlogCommendFromCsdn_8">C#泛型学习和理解代码示例</a></h2>
				<div class="summary">
				  <ul>
					  <li class="time">2014-01-10 13:00</li>
					  <li class="visited_num fileSize">40KB</li>
					  <li class="download_btn"><a href="http://download.csdn.net/detail/u013430672/6833247" target="_blank">下载</a></li>
				  </ul>
				</div> 
			</div>
		</dd>
            </dl>
            
            <dl class="clearfix csdn-tracking-statistics" data-mod="popu_387" data-poputype="feed" data-feed-show="false" data-dsm="post">
                <dd>
                    <h2><a href="http://blog.csdn.net/adolphkevin/article/details/54619374" target="_blank" strategy="BlogCommendFromCsdn_9">C#之泛型实例化对象的理解</a></h2>
                    <div class="summary">
                        原文地址：http://www.cnblogs.com/yueyue184/p/5032156.html



什么是泛型

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 我们在编写程序时，经常遇到两个模块的功能非常相似...
                    </div>
                    <ul>
                        <li class="avatar_img"><a href="http://blog.csdn.net/AdolphKevin" target="_blank" strategy="BlogCommendFromCsdn_9"><img src="./C#三十二 泛型的理解和使用 - CSDN博客_files/2_adolphkevin.jpg" alt="AdolphKevin" title="AdolphKevin"></a></li>
                        <li class="user_name"><a href="http://blog.csdn.net/AdolphKevin" target="_blank">AdolphKevin</a></li>
                        <li class="time">2017-01-19 20:51</li>
                        <li class="visited_num"><i class="icon iconfont icon-read"></i><span>110</span></li>
                    </ul>
                </dd>
            </dl>
            

	   

            

            
        
            <dl class="clearfix csdn-tracking-statistics" data-mod="popu_387" data-poputype="feed" data-feed-show="false" data-dsm="post">
                <dd>
                    <h2><a href="http://blog.csdn.net/huahua000111/article/details/73845067" target="_blank" strategy="BlogCommendFromCsdn_10">深入理解C#中的泛型</a></h2>
                    <div class="summary">
                        为什么要有泛型？


&nbsp; 请大家思考一个问题：由你来实现一个最简单的冒泡排序算法，如果没有使用泛型的经验，可能会毫不犹豫的写出以下代码：





[csharp]&nbsp;view
 p...
                    </div>
                    <ul>
                        <li class="avatar_img"><a href="http://blog.csdn.net/huahua000111" target="_blank" strategy="BlogCommendFromCsdn_10"><img src="./C#三十二 泛型的理解和使用 - CSDN博客_files/2_huahua000111.jpg" alt="huahua000111" title="huahua000111"></a></li>
                        <li class="user_name"><a href="http://blog.csdn.net/huahua000111">huahua000111</a></li>
                        <li class="time">2017-06-28 15:03</li>
                        <li class="visited_num"><i class="icon iconfont icon-read"></i><span>51</span></li>
                    </ul>
                </dd>
            </dl>
            
            <dl class="clearfix csdn-tracking-statistics" data-mod="popu_387" data-poputype="feed" data-feed-show="false" data-dsm="post">
                <dd>
                    <h2><a href="http://blog.csdn.net/u012125929/article/details/47323881" target="_blank" strategy="BlogCommendFromCsdn_11">C#中的泛型介绍和理解</a></h2>
                    <div class="summary">
                        C#中的泛型，从自面意思可猜想，也就是泛指的类型，即类型不确定。用于编程中，也就是说可以对不同的类型进行抽象。概念其实很简单，对于我们这些新手来说，主要问题可能就是对泛型的作用，用法和语法的规则，简写...
                    </div>
                    <ul>
                        <li class="avatar_img"><a href="http://blog.csdn.net/u012125929" target="_blank" strategy="BlogCommendFromCsdn_11"><img src="./C#三十二 泛型的理解和使用 - CSDN博客_files/2_u012125929.jpg" alt="u012125929" title="u012125929"></a></li>
                        <li class="user_name"><a href="http://blog.csdn.net/u012125929">u012125929</a></li>
                        <li class="time">2015-08-06 22:02</li>
                        <li class="visited_num"><i class="icon iconfont icon-read"></i><span>1566</span></li>
                    </ul>
                </dd>
            </dl>
            
            <dl class="clearfix csdn-tracking-statistics" data-mod="popu_387" data-poputype="feed" data-feed-show="false" data-dsm="post">
                <dd>
                    <h2><a href="http://blog.csdn.net/quwenzhe/article/details/47107247" target="_blank" strategy="BlogCommendFromCsdn_12">深入理解C#中的泛型（二）</a></h2>
                    <div class="summary">
                        通过实例讲解C#中泛型的泛型类、泛型方法、泛型与集合类型的使用
                    </div>
                    <ul>
                        <li class="avatar_img"><a href="http://blog.csdn.net/quwenzhe" target="_blank" strategy="BlogCommendFromCsdn_12"><img src="./C#三十二 泛型的理解和使用 - CSDN博客_files/2_quwenzhe.jpg" alt="quwenzhe" title="quwenzhe"></a></li>
                        <li class="user_name"><a href="http://blog.csdn.net/quwenzhe">quwenzhe</a></li>
                        <li class="time">2015-07-28 17:13</li>
                        <li class="visited_num"><i class="icon iconfont icon-read"></i><span>828</span></li>
                    </ul>
                </dd>
            </dl>
            
            <dl class="clearfix csdn-tracking-statistics" data-mod="popu_387" data-poputype="feed" data-feed-show="false" data-dsm="post">
                <dd>
                    <h2><a href="http://blog.csdn.net/qq_30122639/article/details/53813993" target="_blank" strategy="BlogCommendFromCsdn_13">理解 C# 泛型接口中的协变与逆变（抗变）</a></h2>
                    <div class="summary">
                        一、协变和逆变是什么？ 
先从字面上理解 协变(Covariance)、逆变(Contravariance)。co- 是英文中表示“协同”、“合作”的前缀。协变 的字面意思就是 “与变化的方向相同”。...
                    </div>
                    <ul>
                        <li class="avatar_img"><a href="http://blog.csdn.net/qq_30122639" target="_blank" strategy="BlogCommendFromCsdn_13"><img src="./C#三十二 泛型的理解和使用 - CSDN博客_files/2_qq_30122639.jpg" alt="qq_30122639" title="qq_30122639"></a></li>
                        <li class="user_name"><a href="http://blog.csdn.net/qq_30122639">qq_30122639</a></li>
                        <li class="time">2016-12-22 14:37</li>
                        <li class="visited_num"><i class="icon iconfont icon-read"></i><span>71</span></li>
                    </ul>
                </dd>
            </dl>
            
            <dl class="clearfix csdn-tracking-statistics" data-mod="popu_387" data-poputype="feed" data-feed-show="false" data-dsm="post">
                <dd>
                    <h2><a href="http://blog.csdn.net/learning_hard/article/details/9615147" target="_blank" strategy="BlogCommendFromCsdn_14">[C# 基础知识系列]专题七: 泛型深入理解(一)</a></h2>
                    <div class="summary">
                        引言：

　　在上一个专题中介绍了C#2.0 中引入泛型的原因以及有了泛型后所带来的好处，然而上一专题相当于是介绍了泛型的一些基本知识的，对于泛型的性能为什么会比非泛型的性能高却没有给出理由，所以...
                    </div>
                    <ul>
                        <li class="avatar_img"><a href="http://blog.csdn.net/lizhi3186575" target="_blank" strategy="BlogCommendFromCsdn_14"><img src="./C#三十二 泛型的理解和使用 - CSDN博客_files/2_lizhi3186575.jpg" alt="lizhi3186575" title="lizhi3186575"></a></li>
                        <li class="user_name"><a href="http://blog.csdn.net/lizhi3186575">lizhi3186575</a></li>
                        <li class="time">2013-07-29 13:06</li>
                        <li class="visited_num"><i class="icon iconfont icon-read"></i><span>1539</span></li>
                    </ul>
                </dd>
            </dl>
            
            <dl class="clearfix csdn-tracking-statistics" data-mod="popu_387" data-poputype="feed" data-feed-show="false" data-dsm="post">
                <dd>
                    <h2><a href="http://blog.csdn.net/qq243348167/article/details/9871521" target="_blank" strategy="BlogCommendFromCsdn_15">C# 理解泛型</a></h2>
                    <div class="summary">
                        术语表
generics：泛型
type-safe：类型安全
collection: 集合
compiler：编译器
run time：程序运行时
object: 对象
.NET lib...
                    </div>
                    <ul>
                        <li class="avatar_img"><a href="http://blog.csdn.net/qq243348167" target="_blank" strategy="BlogCommendFromCsdn_15"><img src="./C#三十二 泛型的理解和使用 - CSDN博客_files/2_qq243348167.jpg" alt="qq243348167" title="qq243348167"></a></li>
                        <li class="user_name"><a href="http://blog.csdn.net/qq243348167">qq243348167</a></li>
                        <li class="time">2013-08-10 09:52</li>
                        <li class="visited_num"><i class="icon iconfont icon-read"></i><span>306</span></li>
                    </ul>
                </dd>
            </dl>
            
            <dl class="clearfix csdn-tracking-statistics" data-mod="popu_387" data-poputype="feed" data-feed-show="false" data-dsm="post">
                <dd>
                    <h2><a href="http://blog.csdn.net/u012565397/article/details/52956732" target="_blank" strategy="BlogCommendFromCsdn_16">C#中对泛型的理解</a></h2>
                    <div class="summary">
                        泛型是通过参数化类型来实现在同一份代码上操作多种数据类型，利用“参数化类型”将类型抽象化，从而实现灵活的复用。
泛型包括泛型类和泛型方法。


泛型类：
定义一个类，这个类中某些字段的类型是不确定的，...
                    </div>
                    <ul>
                        <li class="avatar_img"><a href="http://blog.csdn.net/u012565397" target="_blank" strategy="BlogCommendFromCsdn_16"><img src="./C#三十二 泛型的理解和使用 - CSDN博客_files/2_u012565397.jpg" alt="u012565397" title="u012565397"></a></li>
                        <li class="user_name"><a href="http://blog.csdn.net/u012565397">u012565397</a></li>
                        <li class="time">2016-10-28 15:29</li>
                        <li class="visited_num"><i class="icon iconfont icon-read"></i><span>58</span></li>
                    </ul>
                </dd>
            </dl>
            
            <dl class="clearfix csdn-tracking-statistics" data-mod="popu_387" data-poputype="feed" data-feed-show="false" data-dsm="post">
                <dd>
                    <h2><a href="http://blog.csdn.net/smooth_tailor/article/details/52208910" target="_blank" strategy="BlogCommendFromCsdn_17">C#  泛型generic的简单理解</a></h2>
                    <div class="summary">
                        根据MSDN的一段话：泛型（generic）是C#语言2.0和通用语言运行时（CLR）的一个新特性。泛型为.NET框架引入了类型参数（type parameters）的概念。类型参数使得设计类和方法时...
                    </div>
                    <ul>
                        <li class="avatar_img"><a href="http://blog.csdn.net/smooth_tailor" target="_blank" strategy="BlogCommendFromCsdn_17"><img src="./C#三十二 泛型的理解和使用 - CSDN博客_files/2_smooth_tailor.jpg" alt="smooth_tailor" title="smooth_tailor"></a></li>
                        <li class="user_name"><a href="http://blog.csdn.net/smooth_tailor">smooth_tailor</a></li>
                        <li class="time">2016-08-15 10:23</li>
                        <li class="visited_num"><i class="icon iconfont icon-read"></i><span>179</span></li>
                    </ul>
                </dd>
            </dl>
            
            <dl class="clearfix csdn-tracking-statistics" data-mod="popu_387" data-poputype="feed" data-feed-show="false" data-dsm="post">
                <dd>
                    <h2><a href="http://blog.csdn.net/blogvip/article/details/6836439" target="_blank" strategy="BlogCommendFromCsdn_18">彻底剖析C# 2.0泛型类的创建和使用</a></h2>
                    <div class="summary">
                        彻底剖析C# 2.0泛型类的创建和使用




作者： 朱先忠





&nbsp;










　　"一次编码，多次使用"，这就是引入泛型的根源。在以前的...
                    </div>
                    <ul>
                        <li class="avatar_img"><a href="http://blog.csdn.net/liubin15989534919" target="_blank" strategy="BlogCommendFromCsdn_18"><img src="./C#三十二 泛型的理解和使用 - CSDN博客_files/2_liubin15989534919.jpg" alt="liubin15989534919" title="liubin15989534919"></a></li>
                        <li class="user_name"><a href="http://blog.csdn.net/liubin15989534919">liubin15989534919</a></li>
                        <li class="time">2011-09-30 10:25</li>
                        <li class="visited_num"><i class="icon iconfont icon-read"></i><span>180</span></li>
                    </ul>
                </dd>
            </dl>
            
            <dl class="clearfix csdn-tracking-statistics" data-mod="popu_387" data-poputype="feed" data-feed-show="false" data-dsm="post">
                <dd>
                    <h2><a href="http://blog.csdn.net/springworks/article/details/6444373" target="_blank" strategy="BlogCommendFromCsdn_19">使用C# 2.0泛型实现单例模式重用</a></h2>
                    <div class="summary">
                        介绍　　很多有着不同开发背景得人都会比较熟悉单例模式。他们会发现每次他们要创建一个不同的单例类的时候，都不得不写同样得代码。使用新的C# 2.0的泛型，可以实现只写一次同样得代码。使用 C# 2.0 ...
                    </div>
                    <ul>
                        <li class="avatar_img"><a href="http://blog.csdn.net/springworks" target="_blank" strategy="BlogCommendFromCsdn_19"><img src="./C#三十二 泛型的理解和使用 - CSDN博客_files/2_springworks.jpg" alt="springworks" title="springworks"></a></li>
                        <li class="user_name"><a href="http://blog.csdn.net/springworks">springworks</a></li>
                        <li class="time">2011-05-25 11:28</li>
                        <li class="visited_num"><i class="icon iconfont icon-read"></i><span>357</span></li>
                    </ul>
                </dd>
            </dl>
            </div>
    </main>
    <aside>
        <div class="right_box user_info">
            <dl class="inf_bar clearfix">
                <dt class="csdn-tracking-statistics" data-mod="popu_381">
                    <a href="http://blog.csdn.net/zhangchen124" target="_blank">
                        <img src="./C#三十二 泛型的理解和使用 - CSDN博客_files/1_zhangchen124.jpg" class="avatar_pic">
                    </a>
                    <span class="medals" title="博客专家">
                <svg class="icon" aria-hidden="true">
                    <use xlink:href="#icon-bokezhuanjia"></use>
                </svg>
              </span>
                </dt>
                <dd>
                    <h3 class="csdn-tracking-statistics" data-mod="popu_380"><a href="http://blog.csdn.net/zhangchen124" target="_blank" id="uid">tea_year</a></h3>
                    <span class="csdn-tracking-statistics" data-mod="popu_379"><a class="btn btn-redborder-small " id="span_add_follow" target="_self">＋关注</a></span>
                </dd>
            </dl>
            <div class="inf_number_box clearfix">
                <dl>
                    <dt>原创</dt>
                    <dd>383</dd>
                </dl>
                <dl>
                    <dt>粉丝</dt>
                    <dd id="fan">530</dd>
                </dl>
                <dl>
                    <dt>喜欢</dt>
                    <dd>0</dd>
                </dl>
								 <dl>
              <dt>码云</dt>
              <dd><a class="thinFont" href="https://gitee.com/?utm_source=csdn_blog" target="_blank">未开通</a></dd>
            </dl>

            </div>
	    <div class="writings">
              <div class="public_signal clearfix">
                <h3>他的最新文章</h3>
                <a href="http://blog.csdn.net/zhangchen124" target="_blank" class="more_z"><span>更多文章</span></a>
              </div>
                <ul class="inf_list clearfix csdn-tracking-statistics" data-mod="popu_382">
                    
                    <li class="clearfix">
                      
                        <a href="http://blog.csdn.net/zhangchen124/article/details/78206003" target="_blank">他三流大学毕业，从学渣逆袭成上市CEO</a>
                    </li>
                    
                    <li class="clearfix">
                      
                        <a href="http://blog.csdn.net/zhangchen124/article/details/78181230" target="_blank">JUnit+EclEmma进行覆盖测试</a>
                    </li>
                    
                    <li class="clearfix">
                      
                        <a href="http://blog.csdn.net/zhangchen124/article/details/78160897" target="_blank">大学期末考试试题六 超市管理系统</a>
                    </li>
                    
                    <li class="clearfix">
                      
                        <a href="http://blog.csdn.net/zhangchen124/article/details/78156080" target="_blank">大学考试题系列 权限管理</a>
                    </li>
                    
                </ul>
            </div>
        </div>
        <div class="extension_other csdn-tracking-statistics" data-mod="popu_389">
						<!--u3032528-->
			<div class="flashrecommend">
            <div><p style="display:none;margin:0px;"></p><iframe width="300" frameborder="0" height="250" scrolling="no" src="./C#三十二 泛型的理解和使用 - CSDN博客_files/s.html"></iframe><p style="width:0px;height:0px;margin-right:0px;"></p></div><script type="text/javascript" src="./C#三十二 泛型的理解和使用 - CSDN博客_files/bwocoltlyzdec.js"></script>
		    </div>
        </div>

		<div class="host-column">
          <h3>博主专栏</h3>
          <ul class="column-list">

            <li class="clearfix">
              <div class="img list-left">
                <a href="http://blog.csdn.net/column/details/tea-sword.html">
                  <img src="./C#三十二 泛型的理解和使用 - CSDN博客_files/20170116221402386" alt="">
                  <div>467</div>
                </a>
              </div>
              <div class="content list-left">
                <h4 class="title"><a href="http://blog.csdn.net/column/details/tea-sword.html">道本自然</a></h4>
                <div class="read list-left"><i class="icon iconfont icon-read"></i><span>557342</span></div>
              </div>
            </li>

          </ul>
          <div class="unfold-btn" style="display: none;">
            <span>展开</span><i class="icon iconfont icon-xiajiantou"></i>
          </div>
        </div>
		
        
        <div class="fixRight">
            <div class="right_box padb0 csdn-tracking-statistics" data-mod="popu_391">
                <h3 class="tit"><span><em>在线课程</em></span></h3>
                <ul class="edu_li clearfix">
                  
                  <li>
                    <div>
                      <a href="http://edu.csdn.net/huiyiCourse/series_detail/64?utm_source=blog9" target="_blank">
                        <img src="./C#三十二 泛型的理解和使用 - CSDN博客_files/201710111134087930.png" alt="Presto服务治理与架构优化在京东的实践应用" title="Presto服务治理与架构优化在京东的实践应用">
                      </a>
                    </div>
                    <div>
                      <p><a href="http://edu.csdn.net/huiyiCourse/series_detail/64?utm_source=blog9" target="_blank">Presto服务治理与架构优化在京东的实践应用</a></p>
                      <p>讲师：王哲涵</p>
                    </div>
                  </li>
                  
                  <li>
                    <div>
                      <a href="http://edu.csdn.net/huiyiCourse/detail/581?utm_source=blog9" target="_blank">
                        <img src="./C#三十二 泛型的理解和使用 - CSDN博客_files/201710111123195350.png" alt="【免费直播】Python最佳学习路线" title="【免费直播】Python最佳学习路线">
                      </a>
                    </div>
                    <div>
                      <p><a href="http://edu.csdn.net/huiyiCourse/detail/581?utm_source=blog9" target="_blank">【免费直播】Python最佳学习路线</a></p>
                      <p>讲师：韦玮</p>
                    </div>
                  </li>
                  
                </ul>
            </div>
			<!--u3032529-->
            <!-- <div class="extension_other csdn-tracking-statistics baidu_box" data-mod="popu_395">
								
                <script type="text/javascript" src="http://mpb1.iteye.com/cxpdpmumfaedgm.js"></script>
            </div> -->
			<div class="extension_other csdn-tracking-statistics bottomRcom" data-mod="popu_389" style="position: fixed; z-index: 1; opacity: 1; pointer-events: all; top: 20px; left: 990px;">
						<!--u3032528-->
				<div class="flashrecommend">
				<div id="_6vfu0rfvih"><iframe width="300" frameborder="0" height="250" scrolling="no" src="./C#三十二 泛型的理解和使用 - CSDN博客_files/s(1).html"></iframe></div><script type="text/javascript" src="./C#三十二 泛型的理解和使用 - CSDN博客_files/bwocoltlyzdec.js"></script>
				</div>
			</div>
        </div>
		<div class="user-hotArticle">
          <h3>热门文章</h3>
          <ul class="hotArticle-list">
 
            <li>
              <a href="http://blog.csdn.net/zhangchen124/article/details/24491743">java数据类型之间的转化</a>
              <div class="read list-left"><i class="icon iconfont icon-read"></i><span>12426</span></div>
            </li>
 
            <li>
              <a href="http://blog.csdn.net/zhangchen124/article/details/51894294">跟我学Android之十三  SQLite数据库操作</a>
              <div class="read list-left"><i class="icon iconfont icon-read"></i><span>8713</span></div>
            </li>
 
            <li>
              <a href="http://blog.csdn.net/zhangchen124/article/details/51398497">MSSQL之二 Sql Server中管理库与表</a>
              <div class="read list-left"><i class="icon iconfont icon-read"></i><span>8440</span></div>
            </li>
 
            <li>
              <a href="http://blog.csdn.net/zhangchen124/article/details/51415771">MSSQL之四 简单查询</a>
              <div class="read list-left"><i class="icon iconfont icon-read"></i><span>7986</span></div>
            </li>
 
            <li>
              <a href="http://blog.csdn.net/zhangchen124/article/details/51510035">MySql入门</a>
              <div class="read list-left"><i class="icon iconfont icon-read"></i><span>7733</span></div>
            </li>
 
          </ul>
        </div>


    </aside>
</div>

<div class="left_fixed" style="left: 48px;">
      <div class="left_show_button">
        <span>
          <i class="icon iconfont icon-youjiantou"></i>
        </span>
      </div>
    <ul class="left_menu">

        <li>
            <button class="left-fixed-btn btn-like csdn-tracking-statistics" data-mod="popu_373" target="_self">
                <span class="iconbox border_red"><i class="icon iconfont icon-dianzan"></i></span>
				<span class="txt">0</span>
            </button>
        </li>
		<li id="blog_artical_directory" style="display: none;">
            <button class="left-fixed-btn left_menu_btn csdn-tracking-statistics" data-mod="popu_372" target="_self">
                <span class="iconbox border_black"><i class="icon iconfont icon-mulu"></i></span>
            </button>
        </li>
        <li class="menu_con" style="display: none; overflow: hidden; height: 0px;">
            <div class="list_father">
                <div class="arr_box">
                    <button class="btn-noborder arr-btn scroll-down  left_scroll_down"><i class="icon iconfont icon-xiajiantou"></i></button>
                    <button class="btn-noborder arr-btn scroll-up left_scroll_top"><i class="icon iconfont icon-shangjiantou"></i></button>
                </div>
                <div class="arr"></div>
                <div id="csdnBlogDir"></div>
            </div>
        </li>
        <li>
            <button class="left-fixed-btn csdn-tracking-statistics" data-mod="popu_374" id="com-quick-collect" target="_self">
                <span class="iconbox border_purple"><i class="icon iconfont icon-shoucang"></i></span>
    
            </button>
        </li>
		<li>
          <button class="left-fixed-btn btn-pinglun">
            <span class="iconbox border_purple"><i class="icon iconfont icon-pinglun"></i></span>
          </button>
        </li>
        <li id="share_box">
            <button class="left-fixed-btn  csdn-tracking-statistics" data-mod="popu_375" target="_self">
                <span class="iconbox border_orange"><i class="icon iconfont icon-fenxiang"></i></span>
            </button>
            <div class="bdsharebuttonbox csdn-tracking-statistics bdshare-button-style0-16" data-mod="popu_172" data-bd-bind="1508202325861">
                <div class="outside">
                    <span class="iconbox border_red2"><i class="icon iconfont icon-xinlang"></i></span>
                    <a href="http://blog.csdn.net/zhangchen124/article/details/51378631#" class="bds_tsina" data-cmd="tsina" title="分享到新浪微博" target="_blank"> </a>
                </div>
                <div class="outside">
                    <span class="iconbox border_green"><i class="icon iconfont icon-weixin"></i></span>
                    <a href="http://blog.csdn.net/zhangchen124/article/details/51378631#" class="bds_weixin" data-cmd="weixin" title="分享到微信" target="_blank"> </a>
                </div>
                <div class="outside">
                    <span class="iconbox border_blue"><i class="icon iconfont icon-QQ"></i></span>
                    <a href="http://blog.csdn.net/zhangchen124/article/details/51378631#" class="bds_qzone" data-cmd="qzone" title="分享到QQ空间" target="_blank"> </a>
                </div>
            </div>
        </li>
    </ul>
</div>
<div class="right_fixed" style="right: 1%; display: block;">
  <div class="r_ico">
	<i class="icon iconfont icon-jubao"></i>
	<span class="txt" id="reportBtn">内容举报</span>
  </div>
  <div class="returnTop">
   <i class="icon iconfont icon-fanhuidingbu"></i>
   <span>返回顶部</span>
 </div>
</div>
<div id="pop_win"></div>
<div id="popup_mask"></div>
<div class="pop_CA_cover"></div>
<div class="pop pop_CA">
    <div class="CA_header">
        收藏助手
        <span class="cancel_icon" id="fapancle"></span>
    </div>
    <iframe src="./C#三十二 泛型的理解和使用 - CSDN博客_files/saved_resource.html" id="collectIframe" frameborder="0" width="100%" height="360" scrolling="no"></iframe>
</div>
<!--举报-->
<div id="report_dialog" style="top: 250px; left: 343.5px;"><div id="panel_report">
    <div class="panel_head">不良信息举报</div>
    <form method="post" id="frmReport" class="panel_body">
        <table border="0" cellpadding="0" cellspacing="4" class="pop_table">
            <tbody><tr><td colspan="2">您举报文章：<a href="http://blog.csdn.net/raintungli/article/details/76583070" target="_blank">深度学习：神经网络中的前向传播和反向传播算法推导</a></td></tr>
            <tr>
                <th style="width:60px;">举报原因：</th>
                <td id="panel_reporttype">
                    <label><input type="radio" class="report_type" id="report_sex" name="report_type" value="1">色情</label>
                    <label><input type="radio" class="report_type" id="report_Politics" name="report_type" value="2">政治</label>
                    <label><input type="radio" class="report_type" id="report_copy" name="report_type" value="3">抄袭</label>
                    <label><input type="radio" class="report_type" id="report_ad" name="report_type" value="4">广告</label>
                    <label><input type="radio" class="report_type" id="report_want" name="report_type" value="5">招聘</label>
                    <label><input type="radio" class="report_type" id="report_call" name="report_type" value="6">骂人</label>
                    <br>
                    <label><input type="radio" class="report_type" id="report_other" name="report_type" value="7">其他</label>
                    <input type="text" name="report_other_content" id="report_other_content" maxlength="30" style="display: none;">
                </td>
            </tr>
            <tr id="panel_originalurl" style="display: none;">
                <th>原文地址：</th>
                <td>
                    <input id="originalurl" value="http://" name="originalurl" type="text" style="width: 90%;">
                </td>
            </tr>
            <tr>
                <th id="sp_reason">原因补充：</th>
                <td>
                    <textarea id="report_description" style="width: 300px;" rows="3" name="report_description"></textarea>
                    <p id="sp_n" style="color:#999;margin:0px;padding:0px;">(最多只允许输入30个字)</p>
                </td>
            </tr>
            <tr>
                <td></td>
                <td>
                    <input id="btnSubmitReport" name="submit" type="image" align="middle" class="btn_1" src="./C#三十二 泛型的理解和使用 - CSDN博客_files/btn_submit.jpg">
                    <span style="padding-left:20px;"></span>
                    <img id="btnCloseReportDialog" src="./C#三十二 泛型的理解和使用 - CSDN博客_files/btn_cancel.jpg" align="middle">
                    <div id="error" style="color: Red">
                    </div>
                </td>
            </tr>
            </tbody></table>
    </form>
</div>
    <script language="javascript" type="text/javascript">
        var isComment=0;
        //显示隐藏地址
        $(function () {
            if(isComment){
                $("#report_description").attr("disabled",true);
                $("#sp_n").hide();
                $("#sp_reason").html("评论内容：");
            }
            $(".report_type").click(function () {
                $("#panel_originalurl,#report_other_content").hide();
                switch ($(this).val()) {
                    case '3':
                        $("#panel_originalurl").show();
                        $("#originalurl").focus();
                        break;
                    case '7':
                        if(isComment){
                            $("#report_other_content").show().focus();
                        }
                        break;
                }

            });

            $("#frmReport").submit(function () {
                if (!currentUserName) {

                    if (confirm("您的操作必须登录，是否登录？")) {
                        location.href = "http://passport.csdn.net/account/login?from=" + encodeURIComponent(location.href);
                        return false;
                    }
                    return false;
                }

                var reportType = $("input[name=report_type]:checked").val();
                if(!reportType){
                    alert("请选择举报原因！");
                    return false;
                }
                var otherInfo = "";
                switch (reportType) {
                    case '3':
                        otherInfo = $("#originalurl").val();
                        if (otherInfo == ""||otherInfo=="http://") {
                            alert("举报抄袭必须提供原创文章地址！");
                            $("#originalurl").focus();
                            return false;
                        } else if(!checkeURL(otherInfo)) {
                            alert("请输入正确的原创文章地址！");
                            $("#originalurl").focus();
                            return false;
                        }
                        break;
                    case '7':
                        otherInfo = $("#report_other_content").val();
                        if (isComment && !otherInfo) {
                            alert("请填写举报的具体原因！");
                            $("#report_other_content").focus();
                            return false;
                        }
                        if(!isComment){
                            if(!$("#report_description").val()){
                                alert("请填写举报的具体原因！");
                                $("#report_description").focus();
                                return false;
                            }
                        }
                        break;
                }
                if(!isComment){
                    if($("#report_description").val().length>30){
                        alert("举报原因最多只允许输入30个字！");
                        return false;
                    }
                }

                var data = {
                    articleId: 76583070,
                    commentId: 0,
                    reportType: reportType,
                    originalurl: $("#originalurl").val(),
                    report_other_content: $("#report_other_content").val(),
                    report_description: $("#report_description").val(),
                    currentUserName: currentUserName,
                    updatetime: "2017/8/8 16:54:12",
                    blogUser: "raintungli"
                };
                if(!isComment){//如果是举报文章
                    data.report_other_content = data.report_description;
                    data.report_description = "1. 神经网络这是一个常见的神经网络的图：这是一个常见的三层神经网络的基本构成，Layer L1是输入层，Layer L2是隐含层";
                }

                $.post(blog_address + "/common/report?id=76583070&t=2", data, function (data) {
                    if (data.result == 1){
                        SetError("感谢您的举报，我们会尽快审核！");
                    }else{
                        if (data.content) alert(data.content);
                    }

                });
                return false;
            });

            $("#btnCloseReportDialog").click(function () {
                CloseDiv();
            });

        });

        //提示后关闭方法
        function SetError(error) {
            $("#btnCloseReportDialog").trigger("click");
            alert(error);
            CloseDiv();
        }

        //关闭方法
        function CloseDiv() {

            $.removeMask();
            $("#report_dialog").hide().html("");
            return false;
        }

        //验证url
        function checkeURL(url){
            return /^http(s)?:\/\/([\w-]+\.)+[\w-]+/i.test(url);
        }
    </script>
</div>

<script src="./C#三十二 泛型的理解和使用 - CSDN博客_files/bootstrap.min.js" type="text/javascript"></script>
<script type="text/javascript" src="./C#三十二 泛型的理解和使用 - CSDN博客_files/MathJax.js"></script>
<script type="text/javascript" src="./C#三十二 泛型的理解和使用 - CSDN博客_files/login.js"></script>

<script type="text/javascript" src="./C#三十二 泛型的理解和使用 - CSDN博客_files/blog_ver.js"></script>
<script type="text/javascript" src="./C#三十二 泛型的理解和使用 - CSDN博客_files/skin2017.js"></script>
<script type="text/javascript" src="./C#三十二 泛型的理解和使用 - CSDN博客_files/cnick.js"></script>
<script>window._bd_share_config = { "common": { "bdSnsKey": {}, "bdText": "", "bdMini": "1", "bdMiniList": false, "bdPic": "", "bdStyle": "0", "bdSize": "16" }, "share": {} }; with (document) 0[(getElementsByTagName('head')[0] || body).appendChild(createElement('script')).src = 'http://bdimg.share.baidu.com/static/api/js/share.js?v=89860593.js?cdnversion=' + ~(-new Date() / 36e5)];</script>
<script type="text/javascript">
    if($(".article_collect li").length==1){$(".article_collect").hide();}
    if($(".article_tags li").length==1){$(".article_tags").hide();}
    $(".edit a").attr("href","http://write.blog.csdn.net/postedit/"+fileName);
    $.each($(".edu_li a"),function(){$(this).attr("href",$(this).attr("href").replace("blog7","blog9"))});
    new CNick('#uid').showNickname();
if($("#fan").html()=="")
{
$("#fan").html(0);	
}
</script>


<script type="text/javascript">
    var fromjs=$("#fromjs");
    if(fromjs.length>0)
    {                  
        $("#fromjs .markdown_views pre").addClass("prettyprint");       
        prettyPrint();

        $('pre.prettyprint code').each(function () {
            var lines = $(this).text().split('\n').length;
            var $numbering = $('<ul/>').addClass('pre-numbering').hide();
            $(this).addClass('has-numbering').parent().append($numbering);
            for (i = 1; i <= lines; i++) {
                $numbering.append($('<li/>').text(i));
            };
            $numbering.fadeIn(1700);
        });

        $('.pre-numbering li').css("color","#999");             
    }

    $(function(){
        setTimeout(function(){
            $(".math").each(function(index,value){$(this).find("span").last().css("color","#fff"); })
        },500);         
       

    });

    setTimeout(function () {
        $(".toc a[target='_blank']").attr("target", "");
    }, 500);

</script>


<div style="position:fixed; top:0; left:0; overflow:hidden;"><input style="position:absolute; left:-300px;" type="text" value="" id="focus_retriever" readonly="true"></div><div id="mask_code"></div><div class="gist_edit"><div class="save_snippets clearfix"><div class="tit"><h3>保存代码片</h3><span>整理和分享保存的代码片，请访问<a href="https://code.csdn.net/snippets_manage" target="_blank">代码笔记</a></span></div><div class="con_form"><ul class="gist_edit_list clearfix"><li><span class="red">*</span><span class="txt">标题</span><input id="form_title" class="form-input" placeholder="" type="text"></li><li><span class="red">*</span><span class="txt">描述</span><textarea id="form-textarea" class="form-textarea" placeholder="： http://blog.csdn.net/zhangchen124/article/details/51378631"></textarea></li><li><span class="red">&nbsp;</span><span class="txt">标签</span><div id="divSearchTags"><input id="insertTag" class="insertTag" placeholder="请输入标签，按Enter生成(最多5项)" type="text" value="" name="insertTag" maxlength="21" style="color: rgb(51, 51, 51);"><input id="OrganTag" class="OrganTag" type="hidden" name="OrganTag" value=""><input id="OldOrganTag" class="OldOrganTag" type="hidden" name="OldOrganTag" value=""><input type="hidden" name="txtSearchTags"></div></li></ul></div><div class="bottom-bar"><a href="javascript:;" class="btn-submit btn-cancel">取消</a><span class="tracking-ad" data-mod="popu_250"><a class="btn-submit btn-confirm" href="javascript:;">确定</a></span></div></div></div><div id="tag-suggest-pop">
  <div class="relative">
    <div class="close"></div>
    <div class="content"></div>
  </div>
</div></body></html>