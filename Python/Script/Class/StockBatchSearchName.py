#!/usr/bin/python
#coding:utf-8
import json
# StockCode = ["600000","600016","600019","600028","600029","600030","600036","600048","600050","600104","600111","600309","600340","600518","600519","600547","600606","600837","600887","600919","600958","600999","601006","601088","601166","601169","601186","601211","601229","601288","601318","601328","601336","601390","601398","601601","601628","601668","601669","601688","601766","601800","601818","601857","601878","601881","601985","601988","601989","603993","600198","300033","300368","300307","600570","002368","600389","002402","002655","600547","601311","000858","300236","002460","000728","002746","300315","600150","603885","002048","600120","300242","300247","002047","600503","000937","002679","603799","300106","002438","300481","300251","300333","300052"]
StockCode = ["600000","600016","600019","600028","600029","600030","600036","600048","600050","600104","600111","600309","600340","600518","600519","600547","600606","600837","600887","600919","600958","600999","601006","601088","601166","601169","601186","601211","601229","601288","601318","601328","601336","601390","601398","601601","601628","601668","601669","601688","601766","601800","601818","601857","601878","601881","601985","601988","601989","603993","600198","300033","300368","300307","600570","002368","600389","002402","002655","601311","000858","300236","002460","000728","002746","300315","600150","603885","002048","600120","300242","300247","002047","600503","000937","002679","603799","300106","002438","300481","300251","300333","300052"]
StockName = ["浦发银行","民生银行","宝钢股份","中国石化","南方航空","中信证券","招商银行","保利地产","中国联通","上汽集团","北方稀土","万华化学","华夏幸福","康美药业","贵州茅台","山东黄金","绿地控股","海通证券","伊利股份","江苏银行","东方证券","招商证券","大秦铁路","中国神华","兴业银行","北京银行","中国铁建","国泰君安","上海银行","农业银行","中国平安","交通银行","新华保险","中国中铁","工商银行","中国太保","中国人寿","中国建筑","中国电建","华泰证券","中国中车","中国交建","光大银行","中国石油","浙江证券","中国银河","中国核电","中国银行","中国重工","洛阳钼业","大唐电信","同花顺","汇金股份","慈星股份","恒生电子","太极股份","江山股份","和而泰","共达电声","骆驼股份","五粮液","上海新阳","赣锋锂业","国元证券","仙坛股份","掌趣科技","中国船舶","吉祥航空","宁波华翔","浙江东方","明家联合","乐金健康","宝鹰股份","华丽家族","冀中能源","福建金森","华友钴业","西部牧业","江苏神通","濮阳惠成","光线传媒","兆日科技","中青宝"]
def RemoveSameCode():
	stockCodeTemp = []
	for index,value in enumerate(StockCode):
		hasSameCode = False
		for i,v in enumerate(stockCodeTemp):
			if(v == value):
				hasSameCode = True
		if hasSameCode == False:
			stockCodeTemp.append(value)
	return stockCodeTemp

with open("/Users/yangyu/Documents/Yangyu/Tools/Stock2018/Code_Name.json","r") as load_f:
	load_dict = json.load(load_f)
	names = ""
	codes = RemoveSameCode()
	if len(codes) != len(StockCode):
		print "StockCode before:{0}  StockCode after:{1}".format(len(StockCode),len(codes)) 
		print codes
	for index,value in enumerate(codes):
		stockname = "\"AA\","
		for i in range(0,len(load_dict)):
			if load_dict[i]["Code"] == value:
				stockname = "\"" + load_dict[i]["Name"] + "\","
				break
		names += stockname
		print stockname + " : " + value
	print names